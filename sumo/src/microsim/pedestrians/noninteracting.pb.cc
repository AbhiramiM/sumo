// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: noninteracting.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "noninteracting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace noninteracting {

namespace {

const ::google::protobuf::Descriptor* PBPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBEdge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBEdge_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBSUMOTime_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBSUMOTime_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBSUMOReal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBSUMOReal_reflection_ = NULL;
const ::google::protobuf::Descriptor* PBMSPersonStage_Walking_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PBMSPersonStage_Walking_reflection_ = NULL;
const ::google::protobuf::Descriptor* CMPWlkgTm_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CMPWlkgTm_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetPos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPos_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetAngle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAngle_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_noninteracting_2eproto() {
  protobuf_AddDesc_noninteracting_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "noninteracting.proto");
  GOOGLE_CHECK(file != NULL);
  PBPosition_descriptor_ = file->message_type(0);
  static const int PBPosition_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, z_),
  };
  PBPosition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBPosition_descriptor_,
      PBPosition::default_instance_,
      PBPosition_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBPosition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBPosition, _is_default_instance_));
  PBEdge_descriptor_ = file->message_type(1);
  static const int PBEdge_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBEdge, fromjunctionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBEdge, tojunctionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBEdge, length_),
  };
  PBEdge_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBEdge_descriptor_,
      PBEdge::default_instance_,
      PBEdge_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBEdge),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBEdge, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBEdge, _is_default_instance_));
  PBSUMOTime_descriptor_ = file->message_type(2);
  static const int PBSUMOTime_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSUMOTime, sumotime_),
  };
  PBSUMOTime_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBSUMOTime_descriptor_,
      PBSUMOTime::default_instance_,
      PBSUMOTime_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBSUMOTime),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSUMOTime, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSUMOTime, _is_default_instance_));
  PBSUMOReal_descriptor_ = file->message_type(3);
  static const int PBSUMOReal_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSUMOReal, sumoreal_),
  };
  PBSUMOReal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBSUMOReal_descriptor_,
      PBSUMOReal::default_instance_,
      PBSUMOReal_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBSUMOReal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSUMOReal, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSUMOReal, _is_default_instance_));
  PBMSPersonStage_Walking_descriptor_ = file->message_type(4);
  static const int PBMSPersonStage_Walking_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMSPersonStage_Walking, edge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMSPersonStage_Walking, nextrouteedge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMSPersonStage_Walking, departpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMSPersonStage_Walking, arrivalpos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMSPersonStage_Walking, maxspeed_),
  };
  PBMSPersonStage_Walking_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PBMSPersonStage_Walking_descriptor_,
      PBMSPersonStage_Walking::default_instance_,
      PBMSPersonStage_Walking_offsets_,
      -1,
      -1,
      -1,
      sizeof(PBMSPersonStage_Walking),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMSPersonStage_Walking, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBMSPersonStage_Walking, _is_default_instance_));
  CMPWlkgTm_descriptor_ = file->message_type(5);
  static const int CMPWlkgTm_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMPWlkgTm, prev_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMPWlkgTm, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMPWlkgTm, sumotime_),
  };
  CMPWlkgTm_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CMPWlkgTm_descriptor_,
      CMPWlkgTm::default_instance_,
      CMPWlkgTm_offsets_,
      -1,
      -1,
      -1,
      sizeof(CMPWlkgTm),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMPWlkgTm, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMPWlkgTm, _is_default_instance_));
  GetPos_descriptor_ = file->message_type(6);
  static const int GetPos_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPos, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPos, sumotime_),
  };
  GetPos_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPos_descriptor_,
      GetPos::default_instance_,
      GetPos_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPos),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPos, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPos, _is_default_instance_));
  GetAngle_descriptor_ = file->message_type(7);
  static const int GetAngle_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAngle, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAngle, sumotime_),
  };
  GetAngle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetAngle_descriptor_,
      GetAngle::default_instance_,
      GetAngle_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetAngle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAngle, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAngle, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_noninteracting_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBPosition_descriptor_, &PBPosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBEdge_descriptor_, &PBEdge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBSUMOTime_descriptor_, &PBSUMOTime::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBSUMOReal_descriptor_, &PBSUMOReal::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PBMSPersonStage_Walking_descriptor_, &PBMSPersonStage_Walking::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CMPWlkgTm_descriptor_, &CMPWlkgTm::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPos_descriptor_, &GetPos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetAngle_descriptor_, &GetAngle::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_noninteracting_2eproto() {
  delete PBPosition::default_instance_;
  delete PBPosition_reflection_;
  delete PBEdge::default_instance_;
  delete PBEdge_reflection_;
  delete PBSUMOTime::default_instance_;
  delete PBSUMOTime_reflection_;
  delete PBSUMOReal::default_instance_;
  delete PBSUMOReal_reflection_;
  delete PBMSPersonStage_Walking::default_instance_;
  delete PBMSPersonStage_Walking_reflection_;
  delete CMPWlkgTm::default_instance_;
  delete CMPWlkgTm_reflection_;
  delete GetPos::default_instance_;
  delete GetPos_reflection_;
  delete GetAngle::default_instance_;
  delete GetAngle_reflection_;
}

void protobuf_AddDesc_noninteracting_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024noninteracting.proto\022\016noninteracting\"-"
    "\n\nPBPosition\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030"
    "\003 \001(\001\"F\n\006PBEdge\022\026\n\016fromJunctionId\030\001 \001(\t\022"
    "\024\n\014toJunctionId\030\002 \001(\t\022\016\n\006length\030\003 \001(\001\"\036\n"
    "\nPBSUMOTime\022\020\n\010sumoTime\030\001 \001(\001\"\036\n\nPBSUMOR"
    "eal\022\020\n\010sumoReal\030\001 \001(\001\"\247\001\n\027PBMSPersonStag"
    "e_Walking\022$\n\004edge\030\001 \001(\0132\026.noninteracting"
    ".PBEdge\022-\n\rnextRouteEdge\030\002 \001(\0132\026.noninte"
    "racting.PBEdge\022\021\n\tdepartPos\030\003 \001(\001\022\022\n\narr"
    "ivalPos\030\004 \001(\001\022\020\n\010maxSpeed\030\005 \001(\001\"\227\001\n\tCMPW"
    "lkgTm\022$\n\004prev\030\001 \001(\0132\026.noninteracting.PBE"
    "dge\0226\n\005stage\030\002 \001(\0132\'.noninteracting.PBMS"
    "PersonStage_Walking\022,\n\010sumoTime\030\003 \001(\0132\032."
    "noninteracting.PBSUMOTime\"n\n\006GetPos\0226\n\005s"
    "tage\030\001 \001(\0132\'.noninteracting.PBMSPersonSt"
    "age_Walking\022,\n\010sumoTime\030\002 \001(\0132\032.noninter"
    "acting.PBSUMOTime\"p\n\010GetAngle\0226\n\005stage\030\001"
    " \001(\0132\'.noninteracting.PBMSPersonStage_Wa"
    "lking\022,\n\010sumoTime\030\002 \001(\0132\032.noninteracting"
    ".PBSUMOTime2\323\003\n\010PBPState\022M\n\022computeWalki"
    "ngTime\022\031.noninteracting.CMPWlkgTm\032\032.noni"
    "nteracting.PBSUMOTime\"\000\022C\n\013getPosition\022\026"
    ".noninteracting.GetPos\032\032.noninteracting."
    "PBPosition\"\000\022B\n\010getAngle\022\030.noninteractin"
    "g.GetAngle\032\032.noninteracting.PBSUMOReal\"\000"
    "\022J\n\016getWaitingTime\022\032.noninteracting.PBSU"
    "MOTime\032\032.noninteracting.PBSUMOTime\"\000\022Q\n\010"
    "getSpeed\022\'.noninteracting.PBMSPersonStag"
    "e_Walking\032\032.noninteracting.PBSUMOReal\"\000\022"
    "P\n\013getNextEdge\022\'.noninteracting.PBMSPers"
    "onStage_Walking\032\026.noninteracting.PBEdge\""
    "\000B3\n\032de.dlr.sumo.noninteractingB\023NonInte"
    "ractingProtoP\000b\006proto3", 1302);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "noninteracting.proto", &protobuf_RegisterTypes);
  PBPosition::default_instance_ = new PBPosition();
  PBEdge::default_instance_ = new PBEdge();
  PBSUMOTime::default_instance_ = new PBSUMOTime();
  PBSUMOReal::default_instance_ = new PBSUMOReal();
  PBMSPersonStage_Walking::default_instance_ = new PBMSPersonStage_Walking();
  CMPWlkgTm::default_instance_ = new CMPWlkgTm();
  GetPos::default_instance_ = new GetPos();
  GetAngle::default_instance_ = new GetAngle();
  PBPosition::default_instance_->InitAsDefaultInstance();
  PBEdge::default_instance_->InitAsDefaultInstance();
  PBSUMOTime::default_instance_->InitAsDefaultInstance();
  PBSUMOReal::default_instance_->InitAsDefaultInstance();
  PBMSPersonStage_Walking::default_instance_->InitAsDefaultInstance();
  CMPWlkgTm::default_instance_->InitAsDefaultInstance();
  GetPos::default_instance_->InitAsDefaultInstance();
  GetAngle::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_noninteracting_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_noninteracting_2eproto {
  StaticDescriptorInitializer_noninteracting_2eproto() {
    protobuf_AddDesc_noninteracting_2eproto();
  }
} static_descriptor_initializer_noninteracting_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBPosition::kXFieldNumber;
const int PBPosition::kYFieldNumber;
const int PBPosition::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBPosition::PBPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:noninteracting.PBPosition)
}

void PBPosition::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBPosition::PBPosition(const PBPosition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:noninteracting.PBPosition)
}

void PBPosition::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
}

PBPosition::~PBPosition() {
  // @@protoc_insertion_point(destructor:noninteracting.PBPosition)
  SharedDtor();
}

void PBPosition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBPosition_descriptor_;
}

const PBPosition& PBPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_noninteracting_2eproto();
  return *default_instance_;
}

PBPosition* PBPosition::default_instance_ = NULL;

PBPosition* PBPosition::New(::google::protobuf::Arena* arena) const {
  PBPosition* n = new PBPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBPosition::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBPosition*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

}

bool PBPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:noninteracting.PBPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // optional double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_z;
        break;
      }

      // optional double z = 3;
      case 3: {
        if (tag == 25) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:noninteracting.PBPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:noninteracting.PBPosition)
  return false;
#undef DO_
}

void PBPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:noninteracting.PBPosition)
  // optional double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // optional double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // optional double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // @@protoc_insertion_point(serialize_end:noninteracting.PBPosition)
}

::google::protobuf::uint8* PBPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:noninteracting.PBPosition)
  // optional double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // optional double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // optional double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:noninteracting.PBPosition)
  return target;
}

int PBPosition::ByteSize() const {
  int total_size = 0;

  // optional double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // optional double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // optional double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBPosition::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBPosition* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBPosition>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBPosition::MergeFrom(const PBPosition& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PBPosition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBPosition::CopyFrom(const PBPosition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBPosition::IsInitialized() const {

  return true;
}

void PBPosition::Swap(PBPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBPosition::InternalSwap(PBPosition* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBPosition_descriptor_;
  metadata.reflection = PBPosition_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPosition

// optional double x = 1;
void PBPosition::clear_x() {
  x_ = 0;
}
 double PBPosition::x() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBPosition.x)
  return x_;
}
 void PBPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBPosition.x)
}

// optional double y = 2;
void PBPosition::clear_y() {
  y_ = 0;
}
 double PBPosition::y() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBPosition.y)
  return y_;
}
 void PBPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBPosition.y)
}

// optional double z = 3;
void PBPosition::clear_z() {
  z_ = 0;
}
 double PBPosition::z() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBPosition.z)
  return z_;
}
 void PBPosition::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBPosition.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBEdge::kFromJunctionIdFieldNumber;
const int PBEdge::kToJunctionIdFieldNumber;
const int PBEdge::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBEdge::PBEdge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:noninteracting.PBEdge)
}

void PBEdge::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBEdge::PBEdge(const PBEdge& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:noninteracting.PBEdge)
}

void PBEdge::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fromjunctionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tojunctionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_ = 0;
}

PBEdge::~PBEdge() {
  // @@protoc_insertion_point(destructor:noninteracting.PBEdge)
  SharedDtor();
}

void PBEdge::SharedDtor() {
  fromjunctionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tojunctionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PBEdge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBEdge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBEdge_descriptor_;
}

const PBEdge& PBEdge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_noninteracting_2eproto();
  return *default_instance_;
}

PBEdge* PBEdge::default_instance_ = NULL;

PBEdge* PBEdge::New(::google::protobuf::Arena* arena) const {
  PBEdge* n = new PBEdge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBEdge::Clear() {
  fromjunctionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tojunctionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_ = 0;
}

bool PBEdge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:noninteracting.PBEdge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fromJunctionId = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromjunctionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fromjunctionid().data(), this->fromjunctionid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "noninteracting.PBEdge.fromJunctionId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_toJunctionId;
        break;
      }

      // optional string toJunctionId = 2;
      case 2: {
        if (tag == 18) {
         parse_toJunctionId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tojunctionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tojunctionid().data(), this->tojunctionid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "noninteracting.PBEdge.toJunctionId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_length;
        break;
      }

      // optional double length = 3;
      case 3: {
        if (tag == 25) {
         parse_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:noninteracting.PBEdge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:noninteracting.PBEdge)
  return false;
#undef DO_
}

void PBEdge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:noninteracting.PBEdge)
  // optional string fromJunctionId = 1;
  if (this->fromjunctionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fromjunctionid().data(), this->fromjunctionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "noninteracting.PBEdge.fromJunctionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fromjunctionid(), output);
  }

  // optional string toJunctionId = 2;
  if (this->tojunctionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tojunctionid().data(), this->tojunctionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "noninteracting.PBEdge.toJunctionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tojunctionid(), output);
  }

  // optional double length = 3;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->length(), output);
  }

  // @@protoc_insertion_point(serialize_end:noninteracting.PBEdge)
}

::google::protobuf::uint8* PBEdge::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:noninteracting.PBEdge)
  // optional string fromJunctionId = 1;
  if (this->fromjunctionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fromjunctionid().data(), this->fromjunctionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "noninteracting.PBEdge.fromJunctionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fromjunctionid(), target);
  }

  // optional string toJunctionId = 2;
  if (this->tojunctionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tojunctionid().data(), this->tojunctionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "noninteracting.PBEdge.toJunctionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tojunctionid(), target);
  }

  // optional double length = 3;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->length(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:noninteracting.PBEdge)
  return target;
}

int PBEdge::ByteSize() const {
  int total_size = 0;

  // optional string fromJunctionId = 1;
  if (this->fromjunctionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fromjunctionid());
  }

  // optional string toJunctionId = 2;
  if (this->tojunctionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tojunctionid());
  }

  // optional double length = 3;
  if (this->length() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBEdge::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBEdge* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBEdge>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBEdge::MergeFrom(const PBEdge& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.fromjunctionid().size() > 0) {

    fromjunctionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromjunctionid_);
  }
  if (from.tojunctionid().size() > 0) {

    tojunctionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tojunctionid_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void PBEdge::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBEdge::CopyFrom(const PBEdge& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBEdge::IsInitialized() const {

  return true;
}

void PBEdge::Swap(PBEdge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBEdge::InternalSwap(PBEdge* other) {
  fromjunctionid_.Swap(&other->fromjunctionid_);
  tojunctionid_.Swap(&other->tojunctionid_);
  std::swap(length_, other->length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBEdge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBEdge_descriptor_;
  metadata.reflection = PBEdge_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBEdge

// optional string fromJunctionId = 1;
void PBEdge::clear_fromjunctionid() {
  fromjunctionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBEdge::fromjunctionid() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.fromJunctionId)
  return fromjunctionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBEdge::set_fromjunctionid(const ::std::string& value) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.fromJunctionId)
}
 void PBEdge::set_fromjunctionid(const char* value) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.PBEdge.fromJunctionId)
}
 void PBEdge::set_fromjunctionid(const char* value, size_t size) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.PBEdge.fromJunctionId)
}
 ::std::string* PBEdge::mutable_fromjunctionid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.PBEdge.fromJunctionId)
  return fromjunctionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBEdge::release_fromjunctionid() {
  
  return fromjunctionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBEdge::set_allocated_fromjunctionid(::std::string* fromjunctionid) {
  if (fromjunctionid != NULL) {
    
  } else {
    
  }
  fromjunctionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromjunctionid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBEdge.fromJunctionId)
}

// optional string toJunctionId = 2;
void PBEdge::clear_tojunctionid() {
  tojunctionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PBEdge::tojunctionid() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.toJunctionId)
  return tojunctionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBEdge::set_tojunctionid(const ::std::string& value) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.toJunctionId)
}
 void PBEdge::set_tojunctionid(const char* value) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.PBEdge.toJunctionId)
}
 void PBEdge::set_tojunctionid(const char* value, size_t size) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.PBEdge.toJunctionId)
}
 ::std::string* PBEdge::mutable_tojunctionid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.PBEdge.toJunctionId)
  return tojunctionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PBEdge::release_tojunctionid() {
  
  return tojunctionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PBEdge::set_allocated_tojunctionid(::std::string* tojunctionid) {
  if (tojunctionid != NULL) {
    
  } else {
    
  }
  tojunctionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tojunctionid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBEdge.toJunctionId)
}

// optional double length = 3;
void PBEdge::clear_length() {
  length_ = 0;
}
 double PBEdge::length() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.length)
  return length_;
}
 void PBEdge::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBSUMOTime::kSumoTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBSUMOTime::PBSUMOTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:noninteracting.PBSUMOTime)
}

void PBSUMOTime::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBSUMOTime::PBSUMOTime(const PBSUMOTime& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:noninteracting.PBSUMOTime)
}

void PBSUMOTime::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sumotime_ = 0;
}

PBSUMOTime::~PBSUMOTime() {
  // @@protoc_insertion_point(destructor:noninteracting.PBSUMOTime)
  SharedDtor();
}

void PBSUMOTime::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBSUMOTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSUMOTime::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBSUMOTime_descriptor_;
}

const PBSUMOTime& PBSUMOTime::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_noninteracting_2eproto();
  return *default_instance_;
}

PBSUMOTime* PBSUMOTime::default_instance_ = NULL;

PBSUMOTime* PBSUMOTime::New(::google::protobuf::Arena* arena) const {
  PBSUMOTime* n = new PBSUMOTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBSUMOTime::Clear() {
  sumotime_ = 0;
}

bool PBSUMOTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:noninteracting.PBSUMOTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double sumoTime = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sumotime_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:noninteracting.PBSUMOTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:noninteracting.PBSUMOTime)
  return false;
#undef DO_
}

void PBSUMOTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:noninteracting.PBSUMOTime)
  // optional double sumoTime = 1;
  if (this->sumotime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->sumotime(), output);
  }

  // @@protoc_insertion_point(serialize_end:noninteracting.PBSUMOTime)
}

::google::protobuf::uint8* PBSUMOTime::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:noninteracting.PBSUMOTime)
  // optional double sumoTime = 1;
  if (this->sumotime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->sumotime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:noninteracting.PBSUMOTime)
  return target;
}

int PBSUMOTime::ByteSize() const {
  int total_size = 0;

  // optional double sumoTime = 1;
  if (this->sumotime() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSUMOTime::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBSUMOTime* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBSUMOTime>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBSUMOTime::MergeFrom(const PBSUMOTime& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.sumotime() != 0) {
    set_sumotime(from.sumotime());
  }
}

void PBSUMOTime::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSUMOTime::CopyFrom(const PBSUMOTime& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSUMOTime::IsInitialized() const {

  return true;
}

void PBSUMOTime::Swap(PBSUMOTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBSUMOTime::InternalSwap(PBSUMOTime* other) {
  std::swap(sumotime_, other->sumotime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBSUMOTime::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBSUMOTime_descriptor_;
  metadata.reflection = PBSUMOTime_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBSUMOTime

// optional double sumoTime = 1;
void PBSUMOTime::clear_sumotime() {
  sumotime_ = 0;
}
 double PBSUMOTime::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBSUMOTime.sumoTime)
  return sumotime_;
}
 void PBSUMOTime::set_sumotime(double value) {
  
  sumotime_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBSUMOTime.sumoTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBSUMOReal::kSumoRealFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBSUMOReal::PBSUMOReal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:noninteracting.PBSUMOReal)
}

void PBSUMOReal::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PBSUMOReal::PBSUMOReal(const PBSUMOReal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:noninteracting.PBSUMOReal)
}

void PBSUMOReal::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  sumoreal_ = 0;
}

PBSUMOReal::~PBSUMOReal() {
  // @@protoc_insertion_point(destructor:noninteracting.PBSUMOReal)
  SharedDtor();
}

void PBSUMOReal::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PBSUMOReal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSUMOReal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBSUMOReal_descriptor_;
}

const PBSUMOReal& PBSUMOReal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_noninteracting_2eproto();
  return *default_instance_;
}

PBSUMOReal* PBSUMOReal::default_instance_ = NULL;

PBSUMOReal* PBSUMOReal::New(::google::protobuf::Arena* arena) const {
  PBSUMOReal* n = new PBSUMOReal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBSUMOReal::Clear() {
  sumoreal_ = 0;
}

bool PBSUMOReal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:noninteracting.PBSUMOReal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double sumoReal = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sumoreal_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:noninteracting.PBSUMOReal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:noninteracting.PBSUMOReal)
  return false;
#undef DO_
}

void PBSUMOReal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:noninteracting.PBSUMOReal)
  // optional double sumoReal = 1;
  if (this->sumoreal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->sumoreal(), output);
  }

  // @@protoc_insertion_point(serialize_end:noninteracting.PBSUMOReal)
}

::google::protobuf::uint8* PBSUMOReal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:noninteracting.PBSUMOReal)
  // optional double sumoReal = 1;
  if (this->sumoreal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->sumoreal(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:noninteracting.PBSUMOReal)
  return target;
}

int PBSUMOReal::ByteSize() const {
  int total_size = 0;

  // optional double sumoReal = 1;
  if (this->sumoreal() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSUMOReal::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBSUMOReal* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBSUMOReal>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBSUMOReal::MergeFrom(const PBSUMOReal& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.sumoreal() != 0) {
    set_sumoreal(from.sumoreal());
  }
}

void PBSUMOReal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSUMOReal::CopyFrom(const PBSUMOReal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSUMOReal::IsInitialized() const {

  return true;
}

void PBSUMOReal::Swap(PBSUMOReal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBSUMOReal::InternalSwap(PBSUMOReal* other) {
  std::swap(sumoreal_, other->sumoreal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBSUMOReal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBSUMOReal_descriptor_;
  metadata.reflection = PBSUMOReal_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBSUMOReal

// optional double sumoReal = 1;
void PBSUMOReal::clear_sumoreal() {
  sumoreal_ = 0;
}
 double PBSUMOReal::sumoreal() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBSUMOReal.sumoReal)
  return sumoreal_;
}
 void PBSUMOReal::set_sumoreal(double value) {
  
  sumoreal_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBSUMOReal.sumoReal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMSPersonStage_Walking::kEdgeFieldNumber;
const int PBMSPersonStage_Walking::kNextRouteEdgeFieldNumber;
const int PBMSPersonStage_Walking::kDepartPosFieldNumber;
const int PBMSPersonStage_Walking::kArrivalPosFieldNumber;
const int PBMSPersonStage_Walking::kMaxSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMSPersonStage_Walking::PBMSPersonStage_Walking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:noninteracting.PBMSPersonStage_Walking)
}

void PBMSPersonStage_Walking::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  edge_ = const_cast< ::noninteracting::PBEdge*>(&::noninteracting::PBEdge::default_instance());
  nextrouteedge_ = const_cast< ::noninteracting::PBEdge*>(&::noninteracting::PBEdge::default_instance());
}

PBMSPersonStage_Walking::PBMSPersonStage_Walking(const PBMSPersonStage_Walking& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:noninteracting.PBMSPersonStage_Walking)
}

void PBMSPersonStage_Walking::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  edge_ = NULL;
  nextrouteedge_ = NULL;
  departpos_ = 0;
  arrivalpos_ = 0;
  maxspeed_ = 0;
}

PBMSPersonStage_Walking::~PBMSPersonStage_Walking() {
  // @@protoc_insertion_point(destructor:noninteracting.PBMSPersonStage_Walking)
  SharedDtor();
}

void PBMSPersonStage_Walking::SharedDtor() {
  if (this != default_instance_) {
    delete edge_;
    delete nextrouteedge_;
  }
}

void PBMSPersonStage_Walking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBMSPersonStage_Walking::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PBMSPersonStage_Walking_descriptor_;
}

const PBMSPersonStage_Walking& PBMSPersonStage_Walking::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_noninteracting_2eproto();
  return *default_instance_;
}

PBMSPersonStage_Walking* PBMSPersonStage_Walking::default_instance_ = NULL;

PBMSPersonStage_Walking* PBMSPersonStage_Walking::New(::google::protobuf::Arena* arena) const {
  PBMSPersonStage_Walking* n = new PBMSPersonStage_Walking;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBMSPersonStage_Walking::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PBMSPersonStage_Walking*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(departpos_, maxspeed_);
  if (GetArenaNoVirtual() == NULL && edge_ != NULL) delete edge_;
  edge_ = NULL;
  if (GetArenaNoVirtual() == NULL && nextrouteedge_ != NULL) delete nextrouteedge_;
  nextrouteedge_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool PBMSPersonStage_Walking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:noninteracting.PBMSPersonStage_Walking)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .noninteracting.PBEdge edge = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_edge()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nextRouteEdge;
        break;
      }

      // optional .noninteracting.PBEdge nextRouteEdge = 2;
      case 2: {
        if (tag == 18) {
         parse_nextRouteEdge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nextrouteedge()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_departPos;
        break;
      }

      // optional double departPos = 3;
      case 3: {
        if (tag == 25) {
         parse_departPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &departpos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_arrivalPos;
        break;
      }

      // optional double arrivalPos = 4;
      case 4: {
        if (tag == 33) {
         parse_arrivalPos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &arrivalpos_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_maxSpeed;
        break;
      }

      // optional double maxSpeed = 5;
      case 5: {
        if (tag == 41) {
         parse_maxSpeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maxspeed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:noninteracting.PBMSPersonStage_Walking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:noninteracting.PBMSPersonStage_Walking)
  return false;
#undef DO_
}

void PBMSPersonStage_Walking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:noninteracting.PBMSPersonStage_Walking)
  // optional .noninteracting.PBEdge edge = 1;
  if (this->has_edge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->edge_, output);
  }

  // optional .noninteracting.PBEdge nextRouteEdge = 2;
  if (this->has_nextrouteedge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nextrouteedge_, output);
  }

  // optional double departPos = 3;
  if (this->departpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->departpos(), output);
  }

  // optional double arrivalPos = 4;
  if (this->arrivalpos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->arrivalpos(), output);
  }

  // optional double maxSpeed = 5;
  if (this->maxspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->maxspeed(), output);
  }

  // @@protoc_insertion_point(serialize_end:noninteracting.PBMSPersonStage_Walking)
}

::google::protobuf::uint8* PBMSPersonStage_Walking::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:noninteracting.PBMSPersonStage_Walking)
  // optional .noninteracting.PBEdge edge = 1;
  if (this->has_edge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->edge_, target);
  }

  // optional .noninteracting.PBEdge nextRouteEdge = 2;
  if (this->has_nextrouteedge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->nextrouteedge_, target);
  }

  // optional double departPos = 3;
  if (this->departpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->departpos(), target);
  }

  // optional double arrivalPos = 4;
  if (this->arrivalpos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->arrivalpos(), target);
  }

  // optional double maxSpeed = 5;
  if (this->maxspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->maxspeed(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:noninteracting.PBMSPersonStage_Walking)
  return target;
}

int PBMSPersonStage_Walking::ByteSize() const {
  int total_size = 0;

  // optional .noninteracting.PBEdge edge = 1;
  if (this->has_edge()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->edge_);
  }

  // optional .noninteracting.PBEdge nextRouteEdge = 2;
  if (this->has_nextrouteedge()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nextrouteedge_);
  }

  // optional double departPos = 3;
  if (this->departpos() != 0) {
    total_size += 1 + 8;
  }

  // optional double arrivalPos = 4;
  if (this->arrivalpos() != 0) {
    total_size += 1 + 8;
  }

  // optional double maxSpeed = 5;
  if (this->maxspeed() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBMSPersonStage_Walking::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PBMSPersonStage_Walking* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMSPersonStage_Walking>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PBMSPersonStage_Walking::MergeFrom(const PBMSPersonStage_Walking& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_edge()) {
    mutable_edge()->::noninteracting::PBEdge::MergeFrom(from.edge());
  }
  if (from.has_nextrouteedge()) {
    mutable_nextrouteedge()->::noninteracting::PBEdge::MergeFrom(from.nextrouteedge());
  }
  if (from.departpos() != 0) {
    set_departpos(from.departpos());
  }
  if (from.arrivalpos() != 0) {
    set_arrivalpos(from.arrivalpos());
  }
  if (from.maxspeed() != 0) {
    set_maxspeed(from.maxspeed());
  }
}

void PBMSPersonStage_Walking::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMSPersonStage_Walking::CopyFrom(const PBMSPersonStage_Walking& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMSPersonStage_Walking::IsInitialized() const {

  return true;
}

void PBMSPersonStage_Walking::Swap(PBMSPersonStage_Walking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMSPersonStage_Walking::InternalSwap(PBMSPersonStage_Walking* other) {
  std::swap(edge_, other->edge_);
  std::swap(nextrouteedge_, other->nextrouteedge_);
  std::swap(departpos_, other->departpos_);
  std::swap(arrivalpos_, other->arrivalpos_);
  std::swap(maxspeed_, other->maxspeed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBMSPersonStage_Walking::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PBMSPersonStage_Walking_descriptor_;
  metadata.reflection = PBMSPersonStage_Walking_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBMSPersonStage_Walking

// optional .noninteracting.PBEdge edge = 1;
bool PBMSPersonStage_Walking::has_edge() const {
  return !_is_default_instance_ && edge_ != NULL;
}
void PBMSPersonStage_Walking::clear_edge() {
  if (GetArenaNoVirtual() == NULL && edge_ != NULL) delete edge_;
  edge_ = NULL;
}
const ::noninteracting::PBEdge& PBMSPersonStage_Walking::edge() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.edge)
  return edge_ != NULL ? *edge_ : *default_instance_->edge_;
}
::noninteracting::PBEdge* PBMSPersonStage_Walking::mutable_edge() {
  
  if (edge_ == NULL) {
    edge_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.PBMSPersonStage_Walking.edge)
  return edge_;
}
::noninteracting::PBEdge* PBMSPersonStage_Walking::release_edge() {
  
  ::noninteracting::PBEdge* temp = edge_;
  edge_ = NULL;
  return temp;
}
void PBMSPersonStage_Walking::set_allocated_edge(::noninteracting::PBEdge* edge) {
  delete edge_;
  edge_ = edge;
  if (edge) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBMSPersonStage_Walking.edge)
}

// optional .noninteracting.PBEdge nextRouteEdge = 2;
bool PBMSPersonStage_Walking::has_nextrouteedge() const {
  return !_is_default_instance_ && nextrouteedge_ != NULL;
}
void PBMSPersonStage_Walking::clear_nextrouteedge() {
  if (GetArenaNoVirtual() == NULL && nextrouteedge_ != NULL) delete nextrouteedge_;
  nextrouteedge_ = NULL;
}
const ::noninteracting::PBEdge& PBMSPersonStage_Walking::nextrouteedge() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
  return nextrouteedge_ != NULL ? *nextrouteedge_ : *default_instance_->nextrouteedge_;
}
::noninteracting::PBEdge* PBMSPersonStage_Walking::mutable_nextrouteedge() {
  
  if (nextrouteedge_ == NULL) {
    nextrouteedge_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
  return nextrouteedge_;
}
::noninteracting::PBEdge* PBMSPersonStage_Walking::release_nextrouteedge() {
  
  ::noninteracting::PBEdge* temp = nextrouteedge_;
  nextrouteedge_ = NULL;
  return temp;
}
void PBMSPersonStage_Walking::set_allocated_nextrouteedge(::noninteracting::PBEdge* nextrouteedge) {
  delete nextrouteedge_;
  nextrouteedge_ = nextrouteedge;
  if (nextrouteedge) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
}

// optional double departPos = 3;
void PBMSPersonStage_Walking::clear_departpos() {
  departpos_ = 0;
}
 double PBMSPersonStage_Walking::departpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.departPos)
  return departpos_;
}
 void PBMSPersonStage_Walking::set_departpos(double value) {
  
  departpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.departPos)
}

// optional double arrivalPos = 4;
void PBMSPersonStage_Walking::clear_arrivalpos() {
  arrivalpos_ = 0;
}
 double PBMSPersonStage_Walking::arrivalpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.arrivalPos)
  return arrivalpos_;
}
 void PBMSPersonStage_Walking::set_arrivalpos(double value) {
  
  arrivalpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.arrivalPos)
}

// optional double maxSpeed = 5;
void PBMSPersonStage_Walking::clear_maxspeed() {
  maxspeed_ = 0;
}
 double PBMSPersonStage_Walking::maxspeed() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.maxSpeed)
  return maxspeed_;
}
 void PBMSPersonStage_Walking::set_maxspeed(double value) {
  
  maxspeed_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.maxSpeed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMPWlkgTm::kPrevFieldNumber;
const int CMPWlkgTm::kStageFieldNumber;
const int CMPWlkgTm::kSumoTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMPWlkgTm::CMPWlkgTm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:noninteracting.CMPWlkgTm)
}

void CMPWlkgTm::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  prev_ = const_cast< ::noninteracting::PBEdge*>(&::noninteracting::PBEdge::default_instance());
  stage_ = const_cast< ::noninteracting::PBMSPersonStage_Walking*>(&::noninteracting::PBMSPersonStage_Walking::default_instance());
  sumotime_ = const_cast< ::noninteracting::PBSUMOTime*>(&::noninteracting::PBSUMOTime::default_instance());
}

CMPWlkgTm::CMPWlkgTm(const CMPWlkgTm& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:noninteracting.CMPWlkgTm)
}

void CMPWlkgTm::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  prev_ = NULL;
  stage_ = NULL;
  sumotime_ = NULL;
}

CMPWlkgTm::~CMPWlkgTm() {
  // @@protoc_insertion_point(destructor:noninteracting.CMPWlkgTm)
  SharedDtor();
}

void CMPWlkgTm::SharedDtor() {
  if (this != default_instance_) {
    delete prev_;
    delete stage_;
    delete sumotime_;
  }
}

void CMPWlkgTm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMPWlkgTm::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMPWlkgTm_descriptor_;
}

const CMPWlkgTm& CMPWlkgTm::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_noninteracting_2eproto();
  return *default_instance_;
}

CMPWlkgTm* CMPWlkgTm::default_instance_ = NULL;

CMPWlkgTm* CMPWlkgTm::New(::google::protobuf::Arena* arena) const {
  CMPWlkgTm* n = new CMPWlkgTm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMPWlkgTm::Clear() {
  if (GetArenaNoVirtual() == NULL && prev_ != NULL) delete prev_;
  prev_ = NULL;
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}

bool CMPWlkgTm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:noninteracting.CMPWlkgTm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .noninteracting.PBEdge prev = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prev()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_stage;
        break;
      }

      // optional .noninteracting.PBMSPersonStage_Walking stage = 2;
      case 2: {
        if (tag == 18) {
         parse_stage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sumoTime;
        break;
      }

      // optional .noninteracting.PBSUMOTime sumoTime = 3;
      case 3: {
        if (tag == 26) {
         parse_sumoTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sumotime()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:noninteracting.CMPWlkgTm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:noninteracting.CMPWlkgTm)
  return false;
#undef DO_
}

void CMPWlkgTm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:noninteracting.CMPWlkgTm)
  // optional .noninteracting.PBEdge prev = 1;
  if (this->has_prev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->prev_, output);
  }

  // optional .noninteracting.PBMSPersonStage_Walking stage = 2;
  if (this->has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stage_, output);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 3;
  if (this->has_sumotime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->sumotime_, output);
  }

  // @@protoc_insertion_point(serialize_end:noninteracting.CMPWlkgTm)
}

::google::protobuf::uint8* CMPWlkgTm::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:noninteracting.CMPWlkgTm)
  // optional .noninteracting.PBEdge prev = 1;
  if (this->has_prev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->prev_, target);
  }

  // optional .noninteracting.PBMSPersonStage_Walking stage = 2;
  if (this->has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->stage_, target);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 3;
  if (this->has_sumotime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->sumotime_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:noninteracting.CMPWlkgTm)
  return target;
}

int CMPWlkgTm::ByteSize() const {
  int total_size = 0;

  // optional .noninteracting.PBEdge prev = 1;
  if (this->has_prev()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prev_);
  }

  // optional .noninteracting.PBMSPersonStage_Walking stage = 2;
  if (this->has_stage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stage_);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 3;
  if (this->has_sumotime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sumotime_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMPWlkgTm::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CMPWlkgTm* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CMPWlkgTm>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CMPWlkgTm::MergeFrom(const CMPWlkgTm& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_prev()) {
    mutable_prev()->::noninteracting::PBEdge::MergeFrom(from.prev());
  }
  if (from.has_stage()) {
    mutable_stage()->::noninteracting::PBMSPersonStage_Walking::MergeFrom(from.stage());
  }
  if (from.has_sumotime()) {
    mutable_sumotime()->::noninteracting::PBSUMOTime::MergeFrom(from.sumotime());
  }
}

void CMPWlkgTm::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMPWlkgTm::CopyFrom(const CMPWlkgTm& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMPWlkgTm::IsInitialized() const {

  return true;
}

void CMPWlkgTm::Swap(CMPWlkgTm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMPWlkgTm::InternalSwap(CMPWlkgTm* other) {
  std::swap(prev_, other->prev_);
  std::swap(stage_, other->stage_);
  std::swap(sumotime_, other->sumotime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMPWlkgTm::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CMPWlkgTm_descriptor_;
  metadata.reflection = CMPWlkgTm_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMPWlkgTm

// optional .noninteracting.PBEdge prev = 1;
bool CMPWlkgTm::has_prev() const {
  return !_is_default_instance_ && prev_ != NULL;
}
void CMPWlkgTm::clear_prev() {
  if (GetArenaNoVirtual() == NULL && prev_ != NULL) delete prev_;
  prev_ = NULL;
}
const ::noninteracting::PBEdge& CMPWlkgTm::prev() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.prev)
  return prev_ != NULL ? *prev_ : *default_instance_->prev_;
}
::noninteracting::PBEdge* CMPWlkgTm::mutable_prev() {
  
  if (prev_ == NULL) {
    prev_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.prev)
  return prev_;
}
::noninteracting::PBEdge* CMPWlkgTm::release_prev() {
  
  ::noninteracting::PBEdge* temp = prev_;
  prev_ = NULL;
  return temp;
}
void CMPWlkgTm::set_allocated_prev(::noninteracting::PBEdge* prev) {
  delete prev_;
  prev_ = prev;
  if (prev) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.prev)
}

// optional .noninteracting.PBMSPersonStage_Walking stage = 2;
bool CMPWlkgTm::has_stage() const {
  return !_is_default_instance_ && stage_ != NULL;
}
void CMPWlkgTm::clear_stage() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
}
const ::noninteracting::PBMSPersonStage_Walking& CMPWlkgTm::stage() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.stage)
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
::noninteracting::PBMSPersonStage_Walking* CMPWlkgTm::mutable_stage() {
  
  if (stage_ == NULL) {
    stage_ = new ::noninteracting::PBMSPersonStage_Walking;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.stage)
  return stage_;
}
::noninteracting::PBMSPersonStage_Walking* CMPWlkgTm::release_stage() {
  
  ::noninteracting::PBMSPersonStage_Walking* temp = stage_;
  stage_ = NULL;
  return temp;
}
void CMPWlkgTm::set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.stage)
}

// optional .noninteracting.PBSUMOTime sumoTime = 3;
bool CMPWlkgTm::has_sumotime() const {
  return !_is_default_instance_ && sumotime_ != NULL;
}
void CMPWlkgTm::clear_sumotime() {
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}
const ::noninteracting::PBSUMOTime& CMPWlkgTm::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.sumoTime)
  return sumotime_ != NULL ? *sumotime_ : *default_instance_->sumotime_;
}
::noninteracting::PBSUMOTime* CMPWlkgTm::mutable_sumotime() {
  
  if (sumotime_ == NULL) {
    sumotime_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.sumoTime)
  return sumotime_;
}
::noninteracting::PBSUMOTime* CMPWlkgTm::release_sumotime() {
  
  ::noninteracting::PBSUMOTime* temp = sumotime_;
  sumotime_ = NULL;
  return temp;
}
void CMPWlkgTm::set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime) {
  delete sumotime_;
  sumotime_ = sumotime;
  if (sumotime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.sumoTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPos::kStageFieldNumber;
const int GetPos::kSumoTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPos::GetPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:noninteracting.GetPos)
}

void GetPos::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  stage_ = const_cast< ::noninteracting::PBMSPersonStage_Walking*>(&::noninteracting::PBMSPersonStage_Walking::default_instance());
  sumotime_ = const_cast< ::noninteracting::PBSUMOTime*>(&::noninteracting::PBSUMOTime::default_instance());
}

GetPos::GetPos(const GetPos& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:noninteracting.GetPos)
}

void GetPos::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  stage_ = NULL;
  sumotime_ = NULL;
}

GetPos::~GetPos() {
  // @@protoc_insertion_point(destructor:noninteracting.GetPos)
  SharedDtor();
}

void GetPos::SharedDtor() {
  if (this != default_instance_) {
    delete stage_;
    delete sumotime_;
  }
}

void GetPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPos_descriptor_;
}

const GetPos& GetPos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_noninteracting_2eproto();
  return *default_instance_;
}

GetPos* GetPos::default_instance_ = NULL;

GetPos* GetPos::New(::google::protobuf::Arena* arena) const {
  GetPos* n = new GetPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPos::Clear() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}

bool GetPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:noninteracting.GetPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sumoTime;
        break;
      }

      // optional .noninteracting.PBSUMOTime sumoTime = 2;
      case 2: {
        if (tag == 18) {
         parse_sumoTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sumotime()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:noninteracting.GetPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:noninteracting.GetPos)
  return false;
#undef DO_
}

void GetPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:noninteracting.GetPos)
  // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
  if (this->has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->stage_, output);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 2;
  if (this->has_sumotime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sumotime_, output);
  }

  // @@protoc_insertion_point(serialize_end:noninteracting.GetPos)
}

::google::protobuf::uint8* GetPos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:noninteracting.GetPos)
  // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
  if (this->has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->stage_, target);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 2;
  if (this->has_sumotime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->sumotime_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:noninteracting.GetPos)
  return target;
}

int GetPos::ByteSize() const {
  int total_size = 0;

  // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
  if (this->has_stage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stage_);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 2;
  if (this->has_sumotime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sumotime_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPos::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetPos* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPos>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetPos::MergeFrom(const GetPos& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_stage()) {
    mutable_stage()->::noninteracting::PBMSPersonStage_Walking::MergeFrom(from.stage());
  }
  if (from.has_sumotime()) {
    mutable_sumotime()->::noninteracting::PBSUMOTime::MergeFrom(from.sumotime());
  }
}

void GetPos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPos::CopyFrom(const GetPos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPos::IsInitialized() const {

  return true;
}

void GetPos::Swap(GetPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPos::InternalSwap(GetPos* other) {
  std::swap(stage_, other->stage_);
  std::swap(sumotime_, other->sumotime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPos_descriptor_;
  metadata.reflection = GetPos_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPos

// optional .noninteracting.PBMSPersonStage_Walking stage = 1;
bool GetPos::has_stage() const {
  return !_is_default_instance_ && stage_ != NULL;
}
void GetPos::clear_stage() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
}
const ::noninteracting::PBMSPersonStage_Walking& GetPos::stage() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetPos.stage)
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
::noninteracting::PBMSPersonStage_Walking* GetPos::mutable_stage() {
  
  if (stage_ == NULL) {
    stage_ = new ::noninteracting::PBMSPersonStage_Walking;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetPos.stage)
  return stage_;
}
::noninteracting::PBMSPersonStage_Walking* GetPos::release_stage() {
  
  ::noninteracting::PBMSPersonStage_Walking* temp = stage_;
  stage_ = NULL;
  return temp;
}
void GetPos::set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetPos.stage)
}

// optional .noninteracting.PBSUMOTime sumoTime = 2;
bool GetPos::has_sumotime() const {
  return !_is_default_instance_ && sumotime_ != NULL;
}
void GetPos::clear_sumotime() {
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}
const ::noninteracting::PBSUMOTime& GetPos::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetPos.sumoTime)
  return sumotime_ != NULL ? *sumotime_ : *default_instance_->sumotime_;
}
::noninteracting::PBSUMOTime* GetPos::mutable_sumotime() {
  
  if (sumotime_ == NULL) {
    sumotime_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetPos.sumoTime)
  return sumotime_;
}
::noninteracting::PBSUMOTime* GetPos::release_sumotime() {
  
  ::noninteracting::PBSUMOTime* temp = sumotime_;
  sumotime_ = NULL;
  return temp;
}
void GetPos::set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime) {
  delete sumotime_;
  sumotime_ = sumotime;
  if (sumotime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetPos.sumoTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAngle::kStageFieldNumber;
const int GetAngle::kSumoTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAngle::GetAngle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:noninteracting.GetAngle)
}

void GetAngle::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  stage_ = const_cast< ::noninteracting::PBMSPersonStage_Walking*>(&::noninteracting::PBMSPersonStage_Walking::default_instance());
  sumotime_ = const_cast< ::noninteracting::PBSUMOTime*>(&::noninteracting::PBSUMOTime::default_instance());
}

GetAngle::GetAngle(const GetAngle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:noninteracting.GetAngle)
}

void GetAngle::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  stage_ = NULL;
  sumotime_ = NULL;
}

GetAngle::~GetAngle() {
  // @@protoc_insertion_point(destructor:noninteracting.GetAngle)
  SharedDtor();
}

void GetAngle::SharedDtor() {
  if (this != default_instance_) {
    delete stage_;
    delete sumotime_;
  }
}

void GetAngle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAngle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAngle_descriptor_;
}

const GetAngle& GetAngle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_noninteracting_2eproto();
  return *default_instance_;
}

GetAngle* GetAngle::default_instance_ = NULL;

GetAngle* GetAngle::New(::google::protobuf::Arena* arena) const {
  GetAngle* n = new GetAngle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAngle::Clear() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}

bool GetAngle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:noninteracting.GetAngle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sumoTime;
        break;
      }

      // optional .noninteracting.PBSUMOTime sumoTime = 2;
      case 2: {
        if (tag == 18) {
         parse_sumoTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sumotime()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:noninteracting.GetAngle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:noninteracting.GetAngle)
  return false;
#undef DO_
}

void GetAngle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:noninteracting.GetAngle)
  // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
  if (this->has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->stage_, output);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 2;
  if (this->has_sumotime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sumotime_, output);
  }

  // @@protoc_insertion_point(serialize_end:noninteracting.GetAngle)
}

::google::protobuf::uint8* GetAngle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:noninteracting.GetAngle)
  // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
  if (this->has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->stage_, target);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 2;
  if (this->has_sumotime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->sumotime_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:noninteracting.GetAngle)
  return target;
}

int GetAngle::ByteSize() const {
  int total_size = 0;

  // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
  if (this->has_stage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stage_);
  }

  // optional .noninteracting.PBSUMOTime sumoTime = 2;
  if (this->has_sumotime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sumotime_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAngle::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetAngle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAngle>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetAngle::MergeFrom(const GetAngle& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_stage()) {
    mutable_stage()->::noninteracting::PBMSPersonStage_Walking::MergeFrom(from.stage());
  }
  if (from.has_sumotime()) {
    mutable_sumotime()->::noninteracting::PBSUMOTime::MergeFrom(from.sumotime());
  }
}

void GetAngle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAngle::CopyFrom(const GetAngle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAngle::IsInitialized() const {

  return true;
}

void GetAngle::Swap(GetAngle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAngle::InternalSwap(GetAngle* other) {
  std::swap(stage_, other->stage_);
  std::swap(sumotime_, other->sumotime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAngle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAngle_descriptor_;
  metadata.reflection = GetAngle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAngle

// optional .noninteracting.PBMSPersonStage_Walking stage = 1;
bool GetAngle::has_stage() const {
  return !_is_default_instance_ && stage_ != NULL;
}
void GetAngle::clear_stage() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
}
const ::noninteracting::PBMSPersonStage_Walking& GetAngle::stage() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetAngle.stage)
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
::noninteracting::PBMSPersonStage_Walking* GetAngle::mutable_stage() {
  
  if (stage_ == NULL) {
    stage_ = new ::noninteracting::PBMSPersonStage_Walking;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetAngle.stage)
  return stage_;
}
::noninteracting::PBMSPersonStage_Walking* GetAngle::release_stage() {
  
  ::noninteracting::PBMSPersonStage_Walking* temp = stage_;
  stage_ = NULL;
  return temp;
}
void GetAngle::set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetAngle.stage)
}

// optional .noninteracting.PBSUMOTime sumoTime = 2;
bool GetAngle::has_sumotime() const {
  return !_is_default_instance_ && sumotime_ != NULL;
}
void GetAngle::clear_sumotime() {
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}
const ::noninteracting::PBSUMOTime& GetAngle::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetAngle.sumoTime)
  return sumotime_ != NULL ? *sumotime_ : *default_instance_->sumotime_;
}
::noninteracting::PBSUMOTime* GetAngle::mutable_sumotime() {
  
  if (sumotime_ == NULL) {
    sumotime_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetAngle.sumoTime)
  return sumotime_;
}
::noninteracting::PBSUMOTime* GetAngle::release_sumotime() {
  
  ::noninteracting::PBSUMOTime* temp = sumotime_;
  sumotime_ = NULL;
  return temp;
}
void GetAngle::set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime) {
  delete sumotime_;
  sumotime_ = sumotime;
  if (sumotime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetAngle.sumoTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace noninteracting

// @@protoc_insertion_point(global_scope)
