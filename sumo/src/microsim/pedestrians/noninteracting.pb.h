// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: noninteracting.proto

#ifndef PROTOBUF_noninteracting_2eproto__INCLUDED
#define PROTOBUF_noninteracting_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace noninteracting {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_noninteracting_2eproto();
void protobuf_AssignDesc_noninteracting_2eproto();
void protobuf_ShutdownFile_noninteracting_2eproto();

class CMPWlkgTm;
class CMPWlkgTmRpl;
class GetEdgePos;
class PBEdge;
class PBMSPersonStage_Walking;
class PBSUMOReal;
class PBSUMOTime;

// ===================================================================

class GetEdgePos : public ::google::protobuf::Message {
 public:
  GetEdgePos();
  virtual ~GetEdgePos();

  GetEdgePos(const GetEdgePos& from);

  inline GetEdgePos& operator=(const GetEdgePos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEdgePos& default_instance();

  void Swap(GetEdgePos* other);

  // implements Message ----------------------------------------------

  inline GetEdgePos* New() const { return New(NULL); }

  GetEdgePos* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEdgePos& from);
  void MergeFrom(const GetEdgePos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetEdgePos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double myCurrentBeginPos = 1;
  void clear_mycurrentbeginpos();
  static const int kMyCurrentBeginPosFieldNumber = 1;
  double mycurrentbeginpos() const;
  void set_mycurrentbeginpos(double value);

  // optional double myCurrentEndPos = 2;
  void clear_mycurrentendpos();
  static const int kMyCurrentEndPosFieldNumber = 2;
  double mycurrentendpos() const;
  void set_mycurrentendpos(double value);

  // optional double myCurrentDuration = 3;
  void clear_mycurrentduration();
  static const int kMyCurrentDurationFieldNumber = 3;
  double mycurrentduration() const;
  void set_mycurrentduration(double value);

  // optional .noninteracting.PBSUMOTime time = 4;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  const ::noninteracting::PBSUMOTime& time() const;
  ::noninteracting::PBSUMOTime* mutable_time();
  ::noninteracting::PBSUMOTime* release_time();
  void set_allocated_time(::noninteracting::PBSUMOTime* time);

  // optional .noninteracting.PBSUMOTime myLastEntryTime = 5;
  bool has_mylastentrytime() const;
  void clear_mylastentrytime();
  static const int kMyLastEntryTimeFieldNumber = 5;
  const ::noninteracting::PBSUMOTime& mylastentrytime() const;
  ::noninteracting::PBSUMOTime* mutable_mylastentrytime();
  ::noninteracting::PBSUMOTime* release_mylastentrytime();
  void set_allocated_mylastentrytime(::noninteracting::PBSUMOTime* mylastentrytime);

  // @@protoc_insertion_point(class_scope:noninteracting.GetEdgePos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double mycurrentbeginpos_;
  double mycurrentendpos_;
  double mycurrentduration_;
  ::noninteracting::PBSUMOTime* time_;
  ::noninteracting::PBSUMOTime* mylastentrytime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static GetEdgePos* default_instance_;
};
// -------------------------------------------------------------------

class PBEdge : public ::google::protobuf::Message {
 public:
  PBEdge();
  virtual ~PBEdge();

  PBEdge(const PBEdge& from);

  inline PBEdge& operator=(const PBEdge& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEdge& default_instance();

  void Swap(PBEdge* other);

  // implements Message ----------------------------------------------

  inline PBEdge* New() const { return New(NULL); }

  PBEdge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEdge& from);
  void MergeFrom(const PBEdge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBEdge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fromJunctionId = 1;
  void clear_fromjunctionid();
  static const int kFromJunctionIdFieldNumber = 1;
  const ::std::string& fromjunctionid() const;
  void set_fromjunctionid(const ::std::string& value);
  void set_fromjunctionid(const char* value);
  void set_fromjunctionid(const char* value, size_t size);
  ::std::string* mutable_fromjunctionid();
  ::std::string* release_fromjunctionid();
  void set_allocated_fromjunctionid(::std::string* fromjunctionid);

  // optional string toJunctionId = 2;
  void clear_tojunctionid();
  static const int kToJunctionIdFieldNumber = 2;
  const ::std::string& tojunctionid() const;
  void set_tojunctionid(const ::std::string& value);
  void set_tojunctionid(const char* value);
  void set_tojunctionid(const char* value, size_t size);
  ::std::string* mutable_tojunctionid();
  ::std::string* release_tojunctionid();
  void set_allocated_tojunctionid(::std::string* tojunctionid);

  // optional double length = 3;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  double length() const;
  void set_length(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBEdge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr fromjunctionid_;
  ::google::protobuf::internal::ArenaStringPtr tojunctionid_;
  double length_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBEdge* default_instance_;
};
// -------------------------------------------------------------------

class PBSUMOTime : public ::google::protobuf::Message {
 public:
  PBSUMOTime();
  virtual ~PBSUMOTime();

  PBSUMOTime(const PBSUMOTime& from);

  inline PBSUMOTime& operator=(const PBSUMOTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSUMOTime& default_instance();

  void Swap(PBSUMOTime* other);

  // implements Message ----------------------------------------------

  inline PBSUMOTime* New() const { return New(NULL); }

  PBSUMOTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSUMOTime& from);
  void MergeFrom(const PBSUMOTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBSUMOTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double sumoTime = 1;
  void clear_sumotime();
  static const int kSumoTimeFieldNumber = 1;
  double sumotime() const;
  void set_sumotime(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBSUMOTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double sumotime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBSUMOTime* default_instance_;
};
// -------------------------------------------------------------------

class PBSUMOReal : public ::google::protobuf::Message {
 public:
  PBSUMOReal();
  virtual ~PBSUMOReal();

  PBSUMOReal(const PBSUMOReal& from);

  inline PBSUMOReal& operator=(const PBSUMOReal& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSUMOReal& default_instance();

  void Swap(PBSUMOReal* other);

  // implements Message ----------------------------------------------

  inline PBSUMOReal* New() const { return New(NULL); }

  PBSUMOReal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSUMOReal& from);
  void MergeFrom(const PBSUMOReal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBSUMOReal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double sumoReal = 1;
  void clear_sumoreal();
  static const int kSumoRealFieldNumber = 1;
  double sumoreal() const;
  void set_sumoreal(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBSUMOReal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double sumoreal_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBSUMOReal* default_instance_;
};
// -------------------------------------------------------------------

class PBMSPersonStage_Walking : public ::google::protobuf::Message {
 public:
  PBMSPersonStage_Walking();
  virtual ~PBMSPersonStage_Walking();

  PBMSPersonStage_Walking(const PBMSPersonStage_Walking& from);

  inline PBMSPersonStage_Walking& operator=(const PBMSPersonStage_Walking& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMSPersonStage_Walking& default_instance();

  void Swap(PBMSPersonStage_Walking* other);

  // implements Message ----------------------------------------------

  inline PBMSPersonStage_Walking* New() const { return New(NULL); }

  PBMSPersonStage_Walking* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMSPersonStage_Walking& from);
  void MergeFrom(const PBMSPersonStage_Walking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBMSPersonStage_Walking* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .noninteracting.PBEdge edge = 1;
  bool has_edge() const;
  void clear_edge();
  static const int kEdgeFieldNumber = 1;
  const ::noninteracting::PBEdge& edge() const;
  ::noninteracting::PBEdge* mutable_edge();
  ::noninteracting::PBEdge* release_edge();
  void set_allocated_edge(::noninteracting::PBEdge* edge);

  // optional .noninteracting.PBEdge nextRouteEdge = 2;
  bool has_nextrouteedge() const;
  void clear_nextrouteedge();
  static const int kNextRouteEdgeFieldNumber = 2;
  const ::noninteracting::PBEdge& nextrouteedge() const;
  ::noninteracting::PBEdge* mutable_nextrouteedge();
  ::noninteracting::PBEdge* release_nextrouteedge();
  void set_allocated_nextrouteedge(::noninteracting::PBEdge* nextrouteedge);

  // optional double departPos = 3;
  void clear_departpos();
  static const int kDepartPosFieldNumber = 3;
  double departpos() const;
  void set_departpos(double value);

  // optional double arrivalPos = 4;
  void clear_arrivalpos();
  static const int kArrivalPosFieldNumber = 4;
  double arrivalpos() const;
  void set_arrivalpos(double value);

  // optional double maxSpeed = 5;
  void clear_maxspeed();
  static const int kMaxSpeedFieldNumber = 5;
  double maxspeed() const;
  void set_maxspeed(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBMSPersonStage_Walking)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::noninteracting::PBEdge* edge_;
  ::noninteracting::PBEdge* nextrouteedge_;
  double departpos_;
  double arrivalpos_;
  double maxspeed_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBMSPersonStage_Walking* default_instance_;
};
// -------------------------------------------------------------------

class CMPWlkgTm : public ::google::protobuf::Message {
 public:
  CMPWlkgTm();
  virtual ~CMPWlkgTm();

  CMPWlkgTm(const CMPWlkgTm& from);

  inline CMPWlkgTm& operator=(const CMPWlkgTm& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMPWlkgTm& default_instance();

  void Swap(CMPWlkgTm* other);

  // implements Message ----------------------------------------------

  inline CMPWlkgTm* New() const { return New(NULL); }

  CMPWlkgTm* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMPWlkgTm& from);
  void MergeFrom(const CMPWlkgTm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMPWlkgTm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .noninteracting.PBEdge prev = 1;
  bool has_prev() const;
  void clear_prev();
  static const int kPrevFieldNumber = 1;
  const ::noninteracting::PBEdge& prev() const;
  ::noninteracting::PBEdge* mutable_prev();
  ::noninteracting::PBEdge* release_prev();
  void set_allocated_prev(::noninteracting::PBEdge* prev);

  // optional .noninteracting.PBMSPersonStage_Walking stage = 2;
  bool has_stage() const;
  void clear_stage();
  static const int kStageFieldNumber = 2;
  const ::noninteracting::PBMSPersonStage_Walking& stage() const;
  ::noninteracting::PBMSPersonStage_Walking* mutable_stage();
  ::noninteracting::PBMSPersonStage_Walking* release_stage();
  void set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage);

  // optional .noninteracting.PBSUMOTime sumoTime = 3;
  bool has_sumotime() const;
  void clear_sumotime();
  static const int kSumoTimeFieldNumber = 3;
  const ::noninteracting::PBSUMOTime& sumotime() const;
  ::noninteracting::PBSUMOTime* mutable_sumotime();
  ::noninteracting::PBSUMOTime* release_sumotime();
  void set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime);

  // @@protoc_insertion_point(class_scope:noninteracting.CMPWlkgTm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::noninteracting::PBEdge* prev_;
  ::noninteracting::PBMSPersonStage_Walking* stage_;
  ::noninteracting::PBSUMOTime* sumotime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static CMPWlkgTm* default_instance_;
};
// -------------------------------------------------------------------

class CMPWlkgTmRpl : public ::google::protobuf::Message {
 public:
  CMPWlkgTmRpl();
  virtual ~CMPWlkgTmRpl();

  CMPWlkgTmRpl(const CMPWlkgTmRpl& from);

  inline CMPWlkgTmRpl& operator=(const CMPWlkgTmRpl& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMPWlkgTmRpl& default_instance();

  void Swap(CMPWlkgTmRpl* other);

  // implements Message ----------------------------------------------

  inline CMPWlkgTmRpl* New() const { return New(NULL); }

  CMPWlkgTmRpl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMPWlkgTmRpl& from);
  void MergeFrom(const CMPWlkgTmRpl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMPWlkgTmRpl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .noninteracting.PBSUMOTime duration = 1;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 1;
  const ::noninteracting::PBSUMOTime& duration() const;
  ::noninteracting::PBSUMOTime* mutable_duration();
  ::noninteracting::PBSUMOTime* release_duration();
  void set_allocated_duration(::noninteracting::PBSUMOTime* duration);

  // optional double myLastEntryTime = 2;
  void clear_mylastentrytime();
  static const int kMyLastEntryTimeFieldNumber = 2;
  double mylastentrytime() const;
  void set_mylastentrytime(double value);

  // optional double myCurrentBeginPos = 3;
  void clear_mycurrentbeginpos();
  static const int kMyCurrentBeginPosFieldNumber = 3;
  double mycurrentbeginpos() const;
  void set_mycurrentbeginpos(double value);

  // optional double myCurrentEndPos = 4;
  void clear_mycurrentendpos();
  static const int kMyCurrentEndPosFieldNumber = 4;
  double mycurrentendpos() const;
  void set_mycurrentendpos(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.CMPWlkgTmRpl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::noninteracting::PBSUMOTime* duration_;
  double mylastentrytime_;
  double mycurrentbeginpos_;
  double mycurrentendpos_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static CMPWlkgTmRpl* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetEdgePos

// optional double myCurrentBeginPos = 1;
inline void GetEdgePos::clear_mycurrentbeginpos() {
  mycurrentbeginpos_ = 0;
}
inline double GetEdgePos::mycurrentbeginpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetEdgePos.myCurrentBeginPos)
  return mycurrentbeginpos_;
}
inline void GetEdgePos::set_mycurrentbeginpos(double value) {
  
  mycurrentbeginpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.GetEdgePos.myCurrentBeginPos)
}

// optional double myCurrentEndPos = 2;
inline void GetEdgePos::clear_mycurrentendpos() {
  mycurrentendpos_ = 0;
}
inline double GetEdgePos::mycurrentendpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetEdgePos.myCurrentEndPos)
  return mycurrentendpos_;
}
inline void GetEdgePos::set_mycurrentendpos(double value) {
  
  mycurrentendpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.GetEdgePos.myCurrentEndPos)
}

// optional double myCurrentDuration = 3;
inline void GetEdgePos::clear_mycurrentduration() {
  mycurrentduration_ = 0;
}
inline double GetEdgePos::mycurrentduration() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetEdgePos.myCurrentDuration)
  return mycurrentduration_;
}
inline void GetEdgePos::set_mycurrentduration(double value) {
  
  mycurrentduration_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.GetEdgePos.myCurrentDuration)
}

// optional .noninteracting.PBSUMOTime time = 4;
inline bool GetEdgePos::has_time() const {
  return !_is_default_instance_ && time_ != NULL;
}
inline void GetEdgePos::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) delete time_;
  time_ = NULL;
}
inline const ::noninteracting::PBSUMOTime& GetEdgePos::time() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetEdgePos.time)
  return time_ != NULL ? *time_ : *default_instance_->time_;
}
inline ::noninteracting::PBSUMOTime* GetEdgePos::mutable_time() {
  
  if (time_ == NULL) {
    time_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetEdgePos.time)
  return time_;
}
inline ::noninteracting::PBSUMOTime* GetEdgePos::release_time() {
  
  ::noninteracting::PBSUMOTime* temp = time_;
  time_ = NULL;
  return temp;
}
inline void GetEdgePos::set_allocated_time(::noninteracting::PBSUMOTime* time) {
  delete time_;
  time_ = time;
  if (time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetEdgePos.time)
}

// optional .noninteracting.PBSUMOTime myLastEntryTime = 5;
inline bool GetEdgePos::has_mylastentrytime() const {
  return !_is_default_instance_ && mylastentrytime_ != NULL;
}
inline void GetEdgePos::clear_mylastentrytime() {
  if (GetArenaNoVirtual() == NULL && mylastentrytime_ != NULL) delete mylastentrytime_;
  mylastentrytime_ = NULL;
}
inline const ::noninteracting::PBSUMOTime& GetEdgePos::mylastentrytime() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetEdgePos.myLastEntryTime)
  return mylastentrytime_ != NULL ? *mylastentrytime_ : *default_instance_->mylastentrytime_;
}
inline ::noninteracting::PBSUMOTime* GetEdgePos::mutable_mylastentrytime() {
  
  if (mylastentrytime_ == NULL) {
    mylastentrytime_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetEdgePos.myLastEntryTime)
  return mylastentrytime_;
}
inline ::noninteracting::PBSUMOTime* GetEdgePos::release_mylastentrytime() {
  
  ::noninteracting::PBSUMOTime* temp = mylastentrytime_;
  mylastentrytime_ = NULL;
  return temp;
}
inline void GetEdgePos::set_allocated_mylastentrytime(::noninteracting::PBSUMOTime* mylastentrytime) {
  delete mylastentrytime_;
  mylastentrytime_ = mylastentrytime;
  if (mylastentrytime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetEdgePos.myLastEntryTime)
}

// -------------------------------------------------------------------

// PBEdge

// optional string fromJunctionId = 1;
inline void PBEdge::clear_fromjunctionid() {
  fromjunctionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBEdge::fromjunctionid() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.fromJunctionId)
  return fromjunctionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBEdge::set_fromjunctionid(const ::std::string& value) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.fromJunctionId)
}
inline void PBEdge::set_fromjunctionid(const char* value) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.PBEdge.fromJunctionId)
}
inline void PBEdge::set_fromjunctionid(const char* value, size_t size) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.PBEdge.fromJunctionId)
}
inline ::std::string* PBEdge::mutable_fromjunctionid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.PBEdge.fromJunctionId)
  return fromjunctionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBEdge::release_fromjunctionid() {
  
  return fromjunctionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBEdge::set_allocated_fromjunctionid(::std::string* fromjunctionid) {
  if (fromjunctionid != NULL) {
    
  } else {
    
  }
  fromjunctionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromjunctionid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBEdge.fromJunctionId)
}

// optional string toJunctionId = 2;
inline void PBEdge::clear_tojunctionid() {
  tojunctionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBEdge::tojunctionid() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.toJunctionId)
  return tojunctionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBEdge::set_tojunctionid(const ::std::string& value) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.toJunctionId)
}
inline void PBEdge::set_tojunctionid(const char* value) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.PBEdge.toJunctionId)
}
inline void PBEdge::set_tojunctionid(const char* value, size_t size) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.PBEdge.toJunctionId)
}
inline ::std::string* PBEdge::mutable_tojunctionid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.PBEdge.toJunctionId)
  return tojunctionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBEdge::release_tojunctionid() {
  
  return tojunctionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBEdge::set_allocated_tojunctionid(::std::string* tojunctionid) {
  if (tojunctionid != NULL) {
    
  } else {
    
  }
  tojunctionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tojunctionid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBEdge.toJunctionId)
}

// optional double length = 3;
inline void PBEdge::clear_length() {
  length_ = 0;
}
inline double PBEdge::length() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.length)
  return length_;
}
inline void PBEdge::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.length)
}

// -------------------------------------------------------------------

// PBSUMOTime

// optional double sumoTime = 1;
inline void PBSUMOTime::clear_sumotime() {
  sumotime_ = 0;
}
inline double PBSUMOTime::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBSUMOTime.sumoTime)
  return sumotime_;
}
inline void PBSUMOTime::set_sumotime(double value) {
  
  sumotime_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBSUMOTime.sumoTime)
}

// -------------------------------------------------------------------

// PBSUMOReal

// optional double sumoReal = 1;
inline void PBSUMOReal::clear_sumoreal() {
  sumoreal_ = 0;
}
inline double PBSUMOReal::sumoreal() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBSUMOReal.sumoReal)
  return sumoreal_;
}
inline void PBSUMOReal::set_sumoreal(double value) {
  
  sumoreal_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBSUMOReal.sumoReal)
}

// -------------------------------------------------------------------

// PBMSPersonStage_Walking

// optional .noninteracting.PBEdge edge = 1;
inline bool PBMSPersonStage_Walking::has_edge() const {
  return !_is_default_instance_ && edge_ != NULL;
}
inline void PBMSPersonStage_Walking::clear_edge() {
  if (GetArenaNoVirtual() == NULL && edge_ != NULL) delete edge_;
  edge_ = NULL;
}
inline const ::noninteracting::PBEdge& PBMSPersonStage_Walking::edge() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.edge)
  return edge_ != NULL ? *edge_ : *default_instance_->edge_;
}
inline ::noninteracting::PBEdge* PBMSPersonStage_Walking::mutable_edge() {
  
  if (edge_ == NULL) {
    edge_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.PBMSPersonStage_Walking.edge)
  return edge_;
}
inline ::noninteracting::PBEdge* PBMSPersonStage_Walking::release_edge() {
  
  ::noninteracting::PBEdge* temp = edge_;
  edge_ = NULL;
  return temp;
}
inline void PBMSPersonStage_Walking::set_allocated_edge(::noninteracting::PBEdge* edge) {
  delete edge_;
  edge_ = edge;
  if (edge) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBMSPersonStage_Walking.edge)
}

// optional .noninteracting.PBEdge nextRouteEdge = 2;
inline bool PBMSPersonStage_Walking::has_nextrouteedge() const {
  return !_is_default_instance_ && nextrouteedge_ != NULL;
}
inline void PBMSPersonStage_Walking::clear_nextrouteedge() {
  if (GetArenaNoVirtual() == NULL && nextrouteedge_ != NULL) delete nextrouteedge_;
  nextrouteedge_ = NULL;
}
inline const ::noninteracting::PBEdge& PBMSPersonStage_Walking::nextrouteedge() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
  return nextrouteedge_ != NULL ? *nextrouteedge_ : *default_instance_->nextrouteedge_;
}
inline ::noninteracting::PBEdge* PBMSPersonStage_Walking::mutable_nextrouteedge() {
  
  if (nextrouteedge_ == NULL) {
    nextrouteedge_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
  return nextrouteedge_;
}
inline ::noninteracting::PBEdge* PBMSPersonStage_Walking::release_nextrouteedge() {
  
  ::noninteracting::PBEdge* temp = nextrouteedge_;
  nextrouteedge_ = NULL;
  return temp;
}
inline void PBMSPersonStage_Walking::set_allocated_nextrouteedge(::noninteracting::PBEdge* nextrouteedge) {
  delete nextrouteedge_;
  nextrouteedge_ = nextrouteedge;
  if (nextrouteedge) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
}

// optional double departPos = 3;
inline void PBMSPersonStage_Walking::clear_departpos() {
  departpos_ = 0;
}
inline double PBMSPersonStage_Walking::departpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.departPos)
  return departpos_;
}
inline void PBMSPersonStage_Walking::set_departpos(double value) {
  
  departpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.departPos)
}

// optional double arrivalPos = 4;
inline void PBMSPersonStage_Walking::clear_arrivalpos() {
  arrivalpos_ = 0;
}
inline double PBMSPersonStage_Walking::arrivalpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.arrivalPos)
  return arrivalpos_;
}
inline void PBMSPersonStage_Walking::set_arrivalpos(double value) {
  
  arrivalpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.arrivalPos)
}

// optional double maxSpeed = 5;
inline void PBMSPersonStage_Walking::clear_maxspeed() {
  maxspeed_ = 0;
}
inline double PBMSPersonStage_Walking::maxspeed() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.maxSpeed)
  return maxspeed_;
}
inline void PBMSPersonStage_Walking::set_maxspeed(double value) {
  
  maxspeed_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.maxSpeed)
}

// -------------------------------------------------------------------

// CMPWlkgTm

// optional .noninteracting.PBEdge prev = 1;
inline bool CMPWlkgTm::has_prev() const {
  return !_is_default_instance_ && prev_ != NULL;
}
inline void CMPWlkgTm::clear_prev() {
  if (GetArenaNoVirtual() == NULL && prev_ != NULL) delete prev_;
  prev_ = NULL;
}
inline const ::noninteracting::PBEdge& CMPWlkgTm::prev() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.prev)
  return prev_ != NULL ? *prev_ : *default_instance_->prev_;
}
inline ::noninteracting::PBEdge* CMPWlkgTm::mutable_prev() {
  
  if (prev_ == NULL) {
    prev_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.prev)
  return prev_;
}
inline ::noninteracting::PBEdge* CMPWlkgTm::release_prev() {
  
  ::noninteracting::PBEdge* temp = prev_;
  prev_ = NULL;
  return temp;
}
inline void CMPWlkgTm::set_allocated_prev(::noninteracting::PBEdge* prev) {
  delete prev_;
  prev_ = prev;
  if (prev) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.prev)
}

// optional .noninteracting.PBMSPersonStage_Walking stage = 2;
inline bool CMPWlkgTm::has_stage() const {
  return !_is_default_instance_ && stage_ != NULL;
}
inline void CMPWlkgTm::clear_stage() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
}
inline const ::noninteracting::PBMSPersonStage_Walking& CMPWlkgTm::stage() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.stage)
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
inline ::noninteracting::PBMSPersonStage_Walking* CMPWlkgTm::mutable_stage() {
  
  if (stage_ == NULL) {
    stage_ = new ::noninteracting::PBMSPersonStage_Walking;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.stage)
  return stage_;
}
inline ::noninteracting::PBMSPersonStage_Walking* CMPWlkgTm::release_stage() {
  
  ::noninteracting::PBMSPersonStage_Walking* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline void CMPWlkgTm::set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.stage)
}

// optional .noninteracting.PBSUMOTime sumoTime = 3;
inline bool CMPWlkgTm::has_sumotime() const {
  return !_is_default_instance_ && sumotime_ != NULL;
}
inline void CMPWlkgTm::clear_sumotime() {
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}
inline const ::noninteracting::PBSUMOTime& CMPWlkgTm::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.sumoTime)
  return sumotime_ != NULL ? *sumotime_ : *default_instance_->sumotime_;
}
inline ::noninteracting::PBSUMOTime* CMPWlkgTm::mutable_sumotime() {
  
  if (sumotime_ == NULL) {
    sumotime_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.sumoTime)
  return sumotime_;
}
inline ::noninteracting::PBSUMOTime* CMPWlkgTm::release_sumotime() {
  
  ::noninteracting::PBSUMOTime* temp = sumotime_;
  sumotime_ = NULL;
  return temp;
}
inline void CMPWlkgTm::set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime) {
  delete sumotime_;
  sumotime_ = sumotime;
  if (sumotime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.sumoTime)
}

// -------------------------------------------------------------------

// CMPWlkgTmRpl

// optional .noninteracting.PBSUMOTime duration = 1;
inline bool CMPWlkgTmRpl::has_duration() const {
  return !_is_default_instance_ && duration_ != NULL;
}
inline void CMPWlkgTmRpl::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) delete duration_;
  duration_ = NULL;
}
inline const ::noninteracting::PBSUMOTime& CMPWlkgTmRpl::duration() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTmRpl.duration)
  return duration_ != NULL ? *duration_ : *default_instance_->duration_;
}
inline ::noninteracting::PBSUMOTime* CMPWlkgTmRpl::mutable_duration() {
  
  if (duration_ == NULL) {
    duration_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTmRpl.duration)
  return duration_;
}
inline ::noninteracting::PBSUMOTime* CMPWlkgTmRpl::release_duration() {
  
  ::noninteracting::PBSUMOTime* temp = duration_;
  duration_ = NULL;
  return temp;
}
inline void CMPWlkgTmRpl::set_allocated_duration(::noninteracting::PBSUMOTime* duration) {
  delete duration_;
  duration_ = duration;
  if (duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTmRpl.duration)
}

// optional double myLastEntryTime = 2;
inline void CMPWlkgTmRpl::clear_mylastentrytime() {
  mylastentrytime_ = 0;
}
inline double CMPWlkgTmRpl::mylastentrytime() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTmRpl.myLastEntryTime)
  return mylastentrytime_;
}
inline void CMPWlkgTmRpl::set_mylastentrytime(double value) {
  
  mylastentrytime_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTmRpl.myLastEntryTime)
}

// optional double myCurrentBeginPos = 3;
inline void CMPWlkgTmRpl::clear_mycurrentbeginpos() {
  mycurrentbeginpos_ = 0;
}
inline double CMPWlkgTmRpl::mycurrentbeginpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTmRpl.myCurrentBeginPos)
  return mycurrentbeginpos_;
}
inline void CMPWlkgTmRpl::set_mycurrentbeginpos(double value) {
  
  mycurrentbeginpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTmRpl.myCurrentBeginPos)
}

// optional double myCurrentEndPos = 4;
inline void CMPWlkgTmRpl::clear_mycurrentendpos() {
  mycurrentendpos_ = 0;
}
inline double CMPWlkgTmRpl::mycurrentendpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTmRpl.myCurrentEndPos)
  return mycurrentendpos_;
}
inline void CMPWlkgTmRpl::set_mycurrentendpos(double value) {
  
  mycurrentendpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTmRpl.myCurrentEndPos)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace noninteracting

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_noninteracting_2eproto__INCLUDED
