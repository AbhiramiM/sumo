// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: noninteracting.proto

#ifndef PROTOBUF_noninteracting_2eproto__INCLUDED
#define PROTOBUF_noninteracting_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace noninteracting {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_noninteracting_2eproto();
void protobuf_AssignDesc_noninteracting_2eproto();
void protobuf_ShutdownFile_noninteracting_2eproto();

class CMPWlkgTm;
class CMPWlkgTm_flat;
class GetAngle;
class GetPos;
class PBEdge;
class PBMSPersonStage_Walking;
class PBPosition;
class PBSUMOReal;
class PBSUMOTime;

// ===================================================================

class PBPosition : public ::google::protobuf::Message {
 public:
  PBPosition();
  virtual ~PBPosition();

  PBPosition(const PBPosition& from);

  inline PBPosition& operator=(const PBPosition& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBPosition& default_instance();

  void Swap(PBPosition* other);

  // implements Message ----------------------------------------------

  inline PBPosition* New() const { return New(NULL); }

  PBPosition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBPosition& from);
  void MergeFrom(const PBPosition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBPosition* default_instance_;
};
// -------------------------------------------------------------------

class PBEdge : public ::google::protobuf::Message {
 public:
  PBEdge();
  virtual ~PBEdge();

  PBEdge(const PBEdge& from);

  inline PBEdge& operator=(const PBEdge& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBEdge& default_instance();

  void Swap(PBEdge* other);

  // implements Message ----------------------------------------------

  inline PBEdge* New() const { return New(NULL); }

  PBEdge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBEdge& from);
  void MergeFrom(const PBEdge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBEdge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fromJunctionId = 1;
  void clear_fromjunctionid();
  static const int kFromJunctionIdFieldNumber = 1;
  const ::std::string& fromjunctionid() const;
  void set_fromjunctionid(const ::std::string& value);
  void set_fromjunctionid(const char* value);
  void set_fromjunctionid(const char* value, size_t size);
  ::std::string* mutable_fromjunctionid();
  ::std::string* release_fromjunctionid();
  void set_allocated_fromjunctionid(::std::string* fromjunctionid);

  // optional string toJunctionId = 2;
  void clear_tojunctionid();
  static const int kToJunctionIdFieldNumber = 2;
  const ::std::string& tojunctionid() const;
  void set_tojunctionid(const ::std::string& value);
  void set_tojunctionid(const char* value);
  void set_tojunctionid(const char* value, size_t size);
  ::std::string* mutable_tojunctionid();
  ::std::string* release_tojunctionid();
  void set_allocated_tojunctionid(::std::string* tojunctionid);

  // optional double length = 3;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  double length() const;
  void set_length(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBEdge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr fromjunctionid_;
  ::google::protobuf::internal::ArenaStringPtr tojunctionid_;
  double length_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBEdge* default_instance_;
};
// -------------------------------------------------------------------

class PBSUMOTime : public ::google::protobuf::Message {
 public:
  PBSUMOTime();
  virtual ~PBSUMOTime();

  PBSUMOTime(const PBSUMOTime& from);

  inline PBSUMOTime& operator=(const PBSUMOTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSUMOTime& default_instance();

  void Swap(PBSUMOTime* other);

  // implements Message ----------------------------------------------

  inline PBSUMOTime* New() const { return New(NULL); }

  PBSUMOTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSUMOTime& from);
  void MergeFrom(const PBSUMOTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBSUMOTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double sumoTime = 1;
  void clear_sumotime();
  static const int kSumoTimeFieldNumber = 1;
  double sumotime() const;
  void set_sumotime(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBSUMOTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double sumotime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBSUMOTime* default_instance_;
};
// -------------------------------------------------------------------

class PBSUMOReal : public ::google::protobuf::Message {
 public:
  PBSUMOReal();
  virtual ~PBSUMOReal();

  PBSUMOReal(const PBSUMOReal& from);

  inline PBSUMOReal& operator=(const PBSUMOReal& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBSUMOReal& default_instance();

  void Swap(PBSUMOReal* other);

  // implements Message ----------------------------------------------

  inline PBSUMOReal* New() const { return New(NULL); }

  PBSUMOReal* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBSUMOReal& from);
  void MergeFrom(const PBSUMOReal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBSUMOReal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double sumoReal = 1;
  void clear_sumoreal();
  static const int kSumoRealFieldNumber = 1;
  double sumoreal() const;
  void set_sumoreal(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBSUMOReal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double sumoreal_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBSUMOReal* default_instance_;
};
// -------------------------------------------------------------------

class PBMSPersonStage_Walking : public ::google::protobuf::Message {
 public:
  PBMSPersonStage_Walking();
  virtual ~PBMSPersonStage_Walking();

  PBMSPersonStage_Walking(const PBMSPersonStage_Walking& from);

  inline PBMSPersonStage_Walking& operator=(const PBMSPersonStage_Walking& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMSPersonStage_Walking& default_instance();

  void Swap(PBMSPersonStage_Walking* other);

  // implements Message ----------------------------------------------

  inline PBMSPersonStage_Walking* New() const { return New(NULL); }

  PBMSPersonStage_Walking* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBMSPersonStage_Walking& from);
  void MergeFrom(const PBMSPersonStage_Walking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PBMSPersonStage_Walking* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .noninteracting.PBEdge edge = 1;
  bool has_edge() const;
  void clear_edge();
  static const int kEdgeFieldNumber = 1;
  const ::noninteracting::PBEdge& edge() const;
  ::noninteracting::PBEdge* mutable_edge();
  ::noninteracting::PBEdge* release_edge();
  void set_allocated_edge(::noninteracting::PBEdge* edge);

  // optional .noninteracting.PBEdge nextRouteEdge = 2;
  bool has_nextrouteedge() const;
  void clear_nextrouteedge();
  static const int kNextRouteEdgeFieldNumber = 2;
  const ::noninteracting::PBEdge& nextrouteedge() const;
  ::noninteracting::PBEdge* mutable_nextrouteedge();
  ::noninteracting::PBEdge* release_nextrouteedge();
  void set_allocated_nextrouteedge(::noninteracting::PBEdge* nextrouteedge);

  // optional double departPos = 3;
  void clear_departpos();
  static const int kDepartPosFieldNumber = 3;
  double departpos() const;
  void set_departpos(double value);

  // optional double arrivalPos = 4;
  void clear_arrivalpos();
  static const int kArrivalPosFieldNumber = 4;
  double arrivalpos() const;
  void set_arrivalpos(double value);

  // optional double maxSpeed = 5;
  void clear_maxspeed();
  static const int kMaxSpeedFieldNumber = 5;
  double maxspeed() const;
  void set_maxspeed(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.PBMSPersonStage_Walking)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::noninteracting::PBEdge* edge_;
  ::noninteracting::PBEdge* nextrouteedge_;
  double departpos_;
  double arrivalpos_;
  double maxspeed_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static PBMSPersonStage_Walking* default_instance_;
};
// -------------------------------------------------------------------

class CMPWlkgTm : public ::google::protobuf::Message {
 public:
  CMPWlkgTm();
  virtual ~CMPWlkgTm();

  CMPWlkgTm(const CMPWlkgTm& from);

  inline CMPWlkgTm& operator=(const CMPWlkgTm& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMPWlkgTm& default_instance();

  void Swap(CMPWlkgTm* other);

  // implements Message ----------------------------------------------

  inline CMPWlkgTm* New() const { return New(NULL); }

  CMPWlkgTm* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMPWlkgTm& from);
  void MergeFrom(const CMPWlkgTm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMPWlkgTm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .noninteracting.PBEdge prev = 1;
  bool has_prev() const;
  void clear_prev();
  static const int kPrevFieldNumber = 1;
  const ::noninteracting::PBEdge& prev() const;
  ::noninteracting::PBEdge* mutable_prev();
  ::noninteracting::PBEdge* release_prev();
  void set_allocated_prev(::noninteracting::PBEdge* prev);

  // optional .noninteracting.PBMSPersonStage_Walking stage = 2;
  bool has_stage() const;
  void clear_stage();
  static const int kStageFieldNumber = 2;
  const ::noninteracting::PBMSPersonStage_Walking& stage() const;
  ::noninteracting::PBMSPersonStage_Walking* mutable_stage();
  ::noninteracting::PBMSPersonStage_Walking* release_stage();
  void set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage);

  // optional .noninteracting.PBSUMOTime sumoTime = 3;
  bool has_sumotime() const;
  void clear_sumotime();
  static const int kSumoTimeFieldNumber = 3;
  const ::noninteracting::PBSUMOTime& sumotime() const;
  ::noninteracting::PBSUMOTime* mutable_sumotime();
  ::noninteracting::PBSUMOTime* release_sumotime();
  void set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime);

  // @@protoc_insertion_point(class_scope:noninteracting.CMPWlkgTm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::noninteracting::PBEdge* prev_;
  ::noninteracting::PBMSPersonStage_Walking* stage_;
  ::noninteracting::PBSUMOTime* sumotime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static CMPWlkgTm* default_instance_;
};
// -------------------------------------------------------------------

class CMPWlkgTm_flat : public ::google::protobuf::Message {
 public:
  CMPWlkgTm_flat();
  virtual ~CMPWlkgTm_flat();

  CMPWlkgTm_flat(const CMPWlkgTm_flat& from);

  inline CMPWlkgTm_flat& operator=(const CMPWlkgTm_flat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMPWlkgTm_flat& default_instance();

  void Swap(CMPWlkgTm_flat* other);

  // implements Message ----------------------------------------------

  inline CMPWlkgTm_flat* New() const { return New(NULL); }

  CMPWlkgTm_flat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMPWlkgTm_flat& from);
  void MergeFrom(const CMPWlkgTm_flat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CMPWlkgTm_flat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string prevFromId = 1;
  void clear_prevfromid();
  static const int kPrevFromIdFieldNumber = 1;
  const ::std::string& prevfromid() const;
  void set_prevfromid(const ::std::string& value);
  void set_prevfromid(const char* value);
  void set_prevfromid(const char* value, size_t size);
  ::std::string* mutable_prevfromid();
  ::std::string* release_prevfromid();
  void set_allocated_prevfromid(::std::string* prevfromid);

  // optional string prevToId = 2;
  void clear_prevtoid();
  static const int kPrevToIdFieldNumber = 2;
  const ::std::string& prevtoid() const;
  void set_prevtoid(const ::std::string& value);
  void set_prevtoid(const char* value);
  void set_prevtoid(const char* value, size_t size);
  ::std::string* mutable_prevtoid();
  ::std::string* release_prevtoid();
  void set_allocated_prevtoid(::std::string* prevtoid);

  // optional double prevLen = 3;
  void clear_prevlen();
  static const int kPrevLenFieldNumber = 3;
  double prevlen() const;
  void set_prevlen(double value);

  // optional string currentFromId = 4;
  void clear_currentfromid();
  static const int kCurrentFromIdFieldNumber = 4;
  const ::std::string& currentfromid() const;
  void set_currentfromid(const ::std::string& value);
  void set_currentfromid(const char* value);
  void set_currentfromid(const char* value, size_t size);
  ::std::string* mutable_currentfromid();
  ::std::string* release_currentfromid();
  void set_allocated_currentfromid(::std::string* currentfromid);

  // optional string currentToId = 5;
  void clear_currenttoid();
  static const int kCurrentToIdFieldNumber = 5;
  const ::std::string& currenttoid() const;
  void set_currenttoid(const ::std::string& value);
  void set_currenttoid(const char* value);
  void set_currenttoid(const char* value, size_t size);
  ::std::string* mutable_currenttoid();
  ::std::string* release_currenttoid();
  void set_allocated_currenttoid(::std::string* currenttoid);

  // optional double currentLen = 6;
  void clear_currentlen();
  static const int kCurrentLenFieldNumber = 6;
  double currentlen() const;
  void set_currentlen(double value);

  // optional string nextFromId = 7;
  void clear_nextfromid();
  static const int kNextFromIdFieldNumber = 7;
  const ::std::string& nextfromid() const;
  void set_nextfromid(const ::std::string& value);
  void set_nextfromid(const char* value);
  void set_nextfromid(const char* value, size_t size);
  ::std::string* mutable_nextfromid();
  ::std::string* release_nextfromid();
  void set_allocated_nextfromid(::std::string* nextfromid);

  // optional string nextToId = 8;
  void clear_nexttoid();
  static const int kNextToIdFieldNumber = 8;
  const ::std::string& nexttoid() const;
  void set_nexttoid(const ::std::string& value);
  void set_nexttoid(const char* value);
  void set_nexttoid(const char* value, size_t size);
  ::std::string* mutable_nexttoid();
  ::std::string* release_nexttoid();
  void set_allocated_nexttoid(::std::string* nexttoid);

  // optional double nextLen = 9;
  void clear_nextlen();
  static const int kNextLenFieldNumber = 9;
  double nextlen() const;
  void set_nextlen(double value);

  // optional double depPos = 10;
  void clear_deppos();
  static const int kDepPosFieldNumber = 10;
  double deppos() const;
  void set_deppos(double value);

  // optional double arrivalPos = 11;
  void clear_arrivalpos();
  static const int kArrivalPosFieldNumber = 11;
  double arrivalpos() const;
  void set_arrivalpos(double value);

  // optional double maxSpeed = 12;
  void clear_maxspeed();
  static const int kMaxSpeedFieldNumber = 12;
  double maxspeed() const;
  void set_maxspeed(double value);

  // optional double time = 13;
  void clear_time();
  static const int kTimeFieldNumber = 13;
  double time() const;
  void set_time(double value);

  // @@protoc_insertion_point(class_scope:noninteracting.CMPWlkgTm_flat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr prevfromid_;
  ::google::protobuf::internal::ArenaStringPtr prevtoid_;
  double prevlen_;
  ::google::protobuf::internal::ArenaStringPtr currentfromid_;
  ::google::protobuf::internal::ArenaStringPtr currenttoid_;
  double currentlen_;
  ::google::protobuf::internal::ArenaStringPtr nextfromid_;
  ::google::protobuf::internal::ArenaStringPtr nexttoid_;
  double nextlen_;
  double deppos_;
  double arrivalpos_;
  double maxspeed_;
  double time_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static CMPWlkgTm_flat* default_instance_;
};
// -------------------------------------------------------------------

class GetPos : public ::google::protobuf::Message {
 public:
  GetPos();
  virtual ~GetPos();

  GetPos(const GetPos& from);

  inline GetPos& operator=(const GetPos& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPos& default_instance();

  void Swap(GetPos* other);

  // implements Message ----------------------------------------------

  inline GetPos* New() const { return New(NULL); }

  GetPos* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPos& from);
  void MergeFrom(const GetPos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
  bool has_stage() const;
  void clear_stage();
  static const int kStageFieldNumber = 1;
  const ::noninteracting::PBMSPersonStage_Walking& stage() const;
  ::noninteracting::PBMSPersonStage_Walking* mutable_stage();
  ::noninteracting::PBMSPersonStage_Walking* release_stage();
  void set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage);

  // optional .noninteracting.PBSUMOTime sumoTime = 2;
  bool has_sumotime() const;
  void clear_sumotime();
  static const int kSumoTimeFieldNumber = 2;
  const ::noninteracting::PBSUMOTime& sumotime() const;
  ::noninteracting::PBSUMOTime* mutable_sumotime();
  ::noninteracting::PBSUMOTime* release_sumotime();
  void set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime);

  // @@protoc_insertion_point(class_scope:noninteracting.GetPos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::noninteracting::PBMSPersonStage_Walking* stage_;
  ::noninteracting::PBSUMOTime* sumotime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static GetPos* default_instance_;
};
// -------------------------------------------------------------------

class GetAngle : public ::google::protobuf::Message {
 public:
  GetAngle();
  virtual ~GetAngle();

  GetAngle(const GetAngle& from);

  inline GetAngle& operator=(const GetAngle& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAngle& default_instance();

  void Swap(GetAngle* other);

  // implements Message ----------------------------------------------

  inline GetAngle* New() const { return New(NULL); }

  GetAngle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetAngle& from);
  void MergeFrom(const GetAngle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetAngle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .noninteracting.PBMSPersonStage_Walking stage = 1;
  bool has_stage() const;
  void clear_stage();
  static const int kStageFieldNumber = 1;
  const ::noninteracting::PBMSPersonStage_Walking& stage() const;
  ::noninteracting::PBMSPersonStage_Walking* mutable_stage();
  ::noninteracting::PBMSPersonStage_Walking* release_stage();
  void set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage);

  // optional .noninteracting.PBSUMOTime sumoTime = 2;
  bool has_sumotime() const;
  void clear_sumotime();
  static const int kSumoTimeFieldNumber = 2;
  const ::noninteracting::PBSUMOTime& sumotime() const;
  ::noninteracting::PBSUMOTime* mutable_sumotime();
  ::noninteracting::PBSUMOTime* release_sumotime();
  void set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime);

  // @@protoc_insertion_point(class_scope:noninteracting.GetAngle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::noninteracting::PBMSPersonStage_Walking* stage_;
  ::noninteracting::PBSUMOTime* sumotime_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_noninteracting_2eproto();
  friend void protobuf_AssignDesc_noninteracting_2eproto();
  friend void protobuf_ShutdownFile_noninteracting_2eproto();

  void InitAsDefaultInstance();
  static GetAngle* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PBPosition

// optional double x = 1;
inline void PBPosition::clear_x() {
  x_ = 0;
}
inline double PBPosition::x() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBPosition.x)
  return x_;
}
inline void PBPosition::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBPosition.x)
}

// optional double y = 2;
inline void PBPosition::clear_y() {
  y_ = 0;
}
inline double PBPosition::y() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBPosition.y)
  return y_;
}
inline void PBPosition::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBPosition.y)
}

// optional double z = 3;
inline void PBPosition::clear_z() {
  z_ = 0;
}
inline double PBPosition::z() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBPosition.z)
  return z_;
}
inline void PBPosition::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBPosition.z)
}

// -------------------------------------------------------------------

// PBEdge

// optional string fromJunctionId = 1;
inline void PBEdge::clear_fromjunctionid() {
  fromjunctionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBEdge::fromjunctionid() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.fromJunctionId)
  return fromjunctionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBEdge::set_fromjunctionid(const ::std::string& value) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.fromJunctionId)
}
inline void PBEdge::set_fromjunctionid(const char* value) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.PBEdge.fromJunctionId)
}
inline void PBEdge::set_fromjunctionid(const char* value, size_t size) {
  
  fromjunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.PBEdge.fromJunctionId)
}
inline ::std::string* PBEdge::mutable_fromjunctionid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.PBEdge.fromJunctionId)
  return fromjunctionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBEdge::release_fromjunctionid() {
  
  return fromjunctionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBEdge::set_allocated_fromjunctionid(::std::string* fromjunctionid) {
  if (fromjunctionid != NULL) {
    
  } else {
    
  }
  fromjunctionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromjunctionid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBEdge.fromJunctionId)
}

// optional string toJunctionId = 2;
inline void PBEdge::clear_tojunctionid() {
  tojunctionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBEdge::tojunctionid() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.toJunctionId)
  return tojunctionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBEdge::set_tojunctionid(const ::std::string& value) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.toJunctionId)
}
inline void PBEdge::set_tojunctionid(const char* value) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.PBEdge.toJunctionId)
}
inline void PBEdge::set_tojunctionid(const char* value, size_t size) {
  
  tojunctionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.PBEdge.toJunctionId)
}
inline ::std::string* PBEdge::mutable_tojunctionid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.PBEdge.toJunctionId)
  return tojunctionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBEdge::release_tojunctionid() {
  
  return tojunctionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBEdge::set_allocated_tojunctionid(::std::string* tojunctionid) {
  if (tojunctionid != NULL) {
    
  } else {
    
  }
  tojunctionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tojunctionid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBEdge.toJunctionId)
}

// optional double length = 3;
inline void PBEdge::clear_length() {
  length_ = 0;
}
inline double PBEdge::length() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBEdge.length)
  return length_;
}
inline void PBEdge::set_length(double value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBEdge.length)
}

// -------------------------------------------------------------------

// PBSUMOTime

// optional double sumoTime = 1;
inline void PBSUMOTime::clear_sumotime() {
  sumotime_ = 0;
}
inline double PBSUMOTime::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBSUMOTime.sumoTime)
  return sumotime_;
}
inline void PBSUMOTime::set_sumotime(double value) {
  
  sumotime_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBSUMOTime.sumoTime)
}

// -------------------------------------------------------------------

// PBSUMOReal

// optional double sumoReal = 1;
inline void PBSUMOReal::clear_sumoreal() {
  sumoreal_ = 0;
}
inline double PBSUMOReal::sumoreal() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBSUMOReal.sumoReal)
  return sumoreal_;
}
inline void PBSUMOReal::set_sumoreal(double value) {
  
  sumoreal_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBSUMOReal.sumoReal)
}

// -------------------------------------------------------------------

// PBMSPersonStage_Walking

// optional .noninteracting.PBEdge edge = 1;
inline bool PBMSPersonStage_Walking::has_edge() const {
  return !_is_default_instance_ && edge_ != NULL;
}
inline void PBMSPersonStage_Walking::clear_edge() {
  if (GetArenaNoVirtual() == NULL && edge_ != NULL) delete edge_;
  edge_ = NULL;
}
inline const ::noninteracting::PBEdge& PBMSPersonStage_Walking::edge() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.edge)
  return edge_ != NULL ? *edge_ : *default_instance_->edge_;
}
inline ::noninteracting::PBEdge* PBMSPersonStage_Walking::mutable_edge() {
  
  if (edge_ == NULL) {
    edge_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.PBMSPersonStage_Walking.edge)
  return edge_;
}
inline ::noninteracting::PBEdge* PBMSPersonStage_Walking::release_edge() {
  
  ::noninteracting::PBEdge* temp = edge_;
  edge_ = NULL;
  return temp;
}
inline void PBMSPersonStage_Walking::set_allocated_edge(::noninteracting::PBEdge* edge) {
  delete edge_;
  edge_ = edge;
  if (edge) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBMSPersonStage_Walking.edge)
}

// optional .noninteracting.PBEdge nextRouteEdge = 2;
inline bool PBMSPersonStage_Walking::has_nextrouteedge() const {
  return !_is_default_instance_ && nextrouteedge_ != NULL;
}
inline void PBMSPersonStage_Walking::clear_nextrouteedge() {
  if (GetArenaNoVirtual() == NULL && nextrouteedge_ != NULL) delete nextrouteedge_;
  nextrouteedge_ = NULL;
}
inline const ::noninteracting::PBEdge& PBMSPersonStage_Walking::nextrouteedge() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
  return nextrouteedge_ != NULL ? *nextrouteedge_ : *default_instance_->nextrouteedge_;
}
inline ::noninteracting::PBEdge* PBMSPersonStage_Walking::mutable_nextrouteedge() {
  
  if (nextrouteedge_ == NULL) {
    nextrouteedge_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
  return nextrouteedge_;
}
inline ::noninteracting::PBEdge* PBMSPersonStage_Walking::release_nextrouteedge() {
  
  ::noninteracting::PBEdge* temp = nextrouteedge_;
  nextrouteedge_ = NULL;
  return temp;
}
inline void PBMSPersonStage_Walking::set_allocated_nextrouteedge(::noninteracting::PBEdge* nextrouteedge) {
  delete nextrouteedge_;
  nextrouteedge_ = nextrouteedge;
  if (nextrouteedge) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.PBMSPersonStage_Walking.nextRouteEdge)
}

// optional double departPos = 3;
inline void PBMSPersonStage_Walking::clear_departpos() {
  departpos_ = 0;
}
inline double PBMSPersonStage_Walking::departpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.departPos)
  return departpos_;
}
inline void PBMSPersonStage_Walking::set_departpos(double value) {
  
  departpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.departPos)
}

// optional double arrivalPos = 4;
inline void PBMSPersonStage_Walking::clear_arrivalpos() {
  arrivalpos_ = 0;
}
inline double PBMSPersonStage_Walking::arrivalpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.arrivalPos)
  return arrivalpos_;
}
inline void PBMSPersonStage_Walking::set_arrivalpos(double value) {
  
  arrivalpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.arrivalPos)
}

// optional double maxSpeed = 5;
inline void PBMSPersonStage_Walking::clear_maxspeed() {
  maxspeed_ = 0;
}
inline double PBMSPersonStage_Walking::maxspeed() const {
  // @@protoc_insertion_point(field_get:noninteracting.PBMSPersonStage_Walking.maxSpeed)
  return maxspeed_;
}
inline void PBMSPersonStage_Walking::set_maxspeed(double value) {
  
  maxspeed_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.PBMSPersonStage_Walking.maxSpeed)
}

// -------------------------------------------------------------------

// CMPWlkgTm

// optional .noninteracting.PBEdge prev = 1;
inline bool CMPWlkgTm::has_prev() const {
  return !_is_default_instance_ && prev_ != NULL;
}
inline void CMPWlkgTm::clear_prev() {
  if (GetArenaNoVirtual() == NULL && prev_ != NULL) delete prev_;
  prev_ = NULL;
}
inline const ::noninteracting::PBEdge& CMPWlkgTm::prev() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.prev)
  return prev_ != NULL ? *prev_ : *default_instance_->prev_;
}
inline ::noninteracting::PBEdge* CMPWlkgTm::mutable_prev() {
  
  if (prev_ == NULL) {
    prev_ = new ::noninteracting::PBEdge;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.prev)
  return prev_;
}
inline ::noninteracting::PBEdge* CMPWlkgTm::release_prev() {
  
  ::noninteracting::PBEdge* temp = prev_;
  prev_ = NULL;
  return temp;
}
inline void CMPWlkgTm::set_allocated_prev(::noninteracting::PBEdge* prev) {
  delete prev_;
  prev_ = prev;
  if (prev) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.prev)
}

// optional .noninteracting.PBMSPersonStage_Walking stage = 2;
inline bool CMPWlkgTm::has_stage() const {
  return !_is_default_instance_ && stage_ != NULL;
}
inline void CMPWlkgTm::clear_stage() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
}
inline const ::noninteracting::PBMSPersonStage_Walking& CMPWlkgTm::stage() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.stage)
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
inline ::noninteracting::PBMSPersonStage_Walking* CMPWlkgTm::mutable_stage() {
  
  if (stage_ == NULL) {
    stage_ = new ::noninteracting::PBMSPersonStage_Walking;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.stage)
  return stage_;
}
inline ::noninteracting::PBMSPersonStage_Walking* CMPWlkgTm::release_stage() {
  
  ::noninteracting::PBMSPersonStage_Walking* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline void CMPWlkgTm::set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.stage)
}

// optional .noninteracting.PBSUMOTime sumoTime = 3;
inline bool CMPWlkgTm::has_sumotime() const {
  return !_is_default_instance_ && sumotime_ != NULL;
}
inline void CMPWlkgTm::clear_sumotime() {
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}
inline const ::noninteracting::PBSUMOTime& CMPWlkgTm::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm.sumoTime)
  return sumotime_ != NULL ? *sumotime_ : *default_instance_->sumotime_;
}
inline ::noninteracting::PBSUMOTime* CMPWlkgTm::mutable_sumotime() {
  
  if (sumotime_ == NULL) {
    sumotime_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm.sumoTime)
  return sumotime_;
}
inline ::noninteracting::PBSUMOTime* CMPWlkgTm::release_sumotime() {
  
  ::noninteracting::PBSUMOTime* temp = sumotime_;
  sumotime_ = NULL;
  return temp;
}
inline void CMPWlkgTm::set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime) {
  delete sumotime_;
  sumotime_ = sumotime;
  if (sumotime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm.sumoTime)
}

// -------------------------------------------------------------------

// CMPWlkgTm_flat

// optional string prevFromId = 1;
inline void CMPWlkgTm_flat::clear_prevfromid() {
  prevfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMPWlkgTm_flat::prevfromid() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.prevFromId)
  return prevfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_prevfromid(const ::std::string& value) {
  
  prevfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.prevFromId)
}
inline void CMPWlkgTm_flat::set_prevfromid(const char* value) {
  
  prevfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.CMPWlkgTm_flat.prevFromId)
}
inline void CMPWlkgTm_flat::set_prevfromid(const char* value, size_t size) {
  
  prevfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.CMPWlkgTm_flat.prevFromId)
}
inline ::std::string* CMPWlkgTm_flat::mutable_prevfromid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm_flat.prevFromId)
  return prevfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMPWlkgTm_flat::release_prevfromid() {
  
  return prevfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_allocated_prevfromid(::std::string* prevfromid) {
  if (prevfromid != NULL) {
    
  } else {
    
  }
  prevfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prevfromid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm_flat.prevFromId)
}

// optional string prevToId = 2;
inline void CMPWlkgTm_flat::clear_prevtoid() {
  prevtoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMPWlkgTm_flat::prevtoid() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.prevToId)
  return prevtoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_prevtoid(const ::std::string& value) {
  
  prevtoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.prevToId)
}
inline void CMPWlkgTm_flat::set_prevtoid(const char* value) {
  
  prevtoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.CMPWlkgTm_flat.prevToId)
}
inline void CMPWlkgTm_flat::set_prevtoid(const char* value, size_t size) {
  
  prevtoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.CMPWlkgTm_flat.prevToId)
}
inline ::std::string* CMPWlkgTm_flat::mutable_prevtoid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm_flat.prevToId)
  return prevtoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMPWlkgTm_flat::release_prevtoid() {
  
  return prevtoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_allocated_prevtoid(::std::string* prevtoid) {
  if (prevtoid != NULL) {
    
  } else {
    
  }
  prevtoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prevtoid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm_flat.prevToId)
}

// optional double prevLen = 3;
inline void CMPWlkgTm_flat::clear_prevlen() {
  prevlen_ = 0;
}
inline double CMPWlkgTm_flat::prevlen() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.prevLen)
  return prevlen_;
}
inline void CMPWlkgTm_flat::set_prevlen(double value) {
  
  prevlen_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.prevLen)
}

// optional string currentFromId = 4;
inline void CMPWlkgTm_flat::clear_currentfromid() {
  currentfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMPWlkgTm_flat::currentfromid() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.currentFromId)
  return currentfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_currentfromid(const ::std::string& value) {
  
  currentfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.currentFromId)
}
inline void CMPWlkgTm_flat::set_currentfromid(const char* value) {
  
  currentfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.CMPWlkgTm_flat.currentFromId)
}
inline void CMPWlkgTm_flat::set_currentfromid(const char* value, size_t size) {
  
  currentfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.CMPWlkgTm_flat.currentFromId)
}
inline ::std::string* CMPWlkgTm_flat::mutable_currentfromid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm_flat.currentFromId)
  return currentfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMPWlkgTm_flat::release_currentfromid() {
  
  return currentfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_allocated_currentfromid(::std::string* currentfromid) {
  if (currentfromid != NULL) {
    
  } else {
    
  }
  currentfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currentfromid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm_flat.currentFromId)
}

// optional string currentToId = 5;
inline void CMPWlkgTm_flat::clear_currenttoid() {
  currenttoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMPWlkgTm_flat::currenttoid() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.currentToId)
  return currenttoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_currenttoid(const ::std::string& value) {
  
  currenttoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.currentToId)
}
inline void CMPWlkgTm_flat::set_currenttoid(const char* value) {
  
  currenttoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.CMPWlkgTm_flat.currentToId)
}
inline void CMPWlkgTm_flat::set_currenttoid(const char* value, size_t size) {
  
  currenttoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.CMPWlkgTm_flat.currentToId)
}
inline ::std::string* CMPWlkgTm_flat::mutable_currenttoid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm_flat.currentToId)
  return currenttoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMPWlkgTm_flat::release_currenttoid() {
  
  return currenttoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_allocated_currenttoid(::std::string* currenttoid) {
  if (currenttoid != NULL) {
    
  } else {
    
  }
  currenttoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currenttoid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm_flat.currentToId)
}

// optional double currentLen = 6;
inline void CMPWlkgTm_flat::clear_currentlen() {
  currentlen_ = 0;
}
inline double CMPWlkgTm_flat::currentlen() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.currentLen)
  return currentlen_;
}
inline void CMPWlkgTm_flat::set_currentlen(double value) {
  
  currentlen_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.currentLen)
}

// optional string nextFromId = 7;
inline void CMPWlkgTm_flat::clear_nextfromid() {
  nextfromid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMPWlkgTm_flat::nextfromid() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.nextFromId)
  return nextfromid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_nextfromid(const ::std::string& value) {
  
  nextfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.nextFromId)
}
inline void CMPWlkgTm_flat::set_nextfromid(const char* value) {
  
  nextfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.CMPWlkgTm_flat.nextFromId)
}
inline void CMPWlkgTm_flat::set_nextfromid(const char* value, size_t size) {
  
  nextfromid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.CMPWlkgTm_flat.nextFromId)
}
inline ::std::string* CMPWlkgTm_flat::mutable_nextfromid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm_flat.nextFromId)
  return nextfromid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMPWlkgTm_flat::release_nextfromid() {
  
  return nextfromid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_allocated_nextfromid(::std::string* nextfromid) {
  if (nextfromid != NULL) {
    
  } else {
    
  }
  nextfromid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nextfromid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm_flat.nextFromId)
}

// optional string nextToId = 8;
inline void CMPWlkgTm_flat::clear_nexttoid() {
  nexttoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMPWlkgTm_flat::nexttoid() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.nextToId)
  return nexttoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_nexttoid(const ::std::string& value) {
  
  nexttoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.nextToId)
}
inline void CMPWlkgTm_flat::set_nexttoid(const char* value) {
  
  nexttoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:noninteracting.CMPWlkgTm_flat.nextToId)
}
inline void CMPWlkgTm_flat::set_nexttoid(const char* value, size_t size) {
  
  nexttoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:noninteracting.CMPWlkgTm_flat.nextToId)
}
inline ::std::string* CMPWlkgTm_flat::mutable_nexttoid() {
  
  // @@protoc_insertion_point(field_mutable:noninteracting.CMPWlkgTm_flat.nextToId)
  return nexttoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMPWlkgTm_flat::release_nexttoid() {
  
  return nexttoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMPWlkgTm_flat::set_allocated_nexttoid(::std::string* nexttoid) {
  if (nexttoid != NULL) {
    
  } else {
    
  }
  nexttoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nexttoid);
  // @@protoc_insertion_point(field_set_allocated:noninteracting.CMPWlkgTm_flat.nextToId)
}

// optional double nextLen = 9;
inline void CMPWlkgTm_flat::clear_nextlen() {
  nextlen_ = 0;
}
inline double CMPWlkgTm_flat::nextlen() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.nextLen)
  return nextlen_;
}
inline void CMPWlkgTm_flat::set_nextlen(double value) {
  
  nextlen_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.nextLen)
}

// optional double depPos = 10;
inline void CMPWlkgTm_flat::clear_deppos() {
  deppos_ = 0;
}
inline double CMPWlkgTm_flat::deppos() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.depPos)
  return deppos_;
}
inline void CMPWlkgTm_flat::set_deppos(double value) {
  
  deppos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.depPos)
}

// optional double arrivalPos = 11;
inline void CMPWlkgTm_flat::clear_arrivalpos() {
  arrivalpos_ = 0;
}
inline double CMPWlkgTm_flat::arrivalpos() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.arrivalPos)
  return arrivalpos_;
}
inline void CMPWlkgTm_flat::set_arrivalpos(double value) {
  
  arrivalpos_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.arrivalPos)
}

// optional double maxSpeed = 12;
inline void CMPWlkgTm_flat::clear_maxspeed() {
  maxspeed_ = 0;
}
inline double CMPWlkgTm_flat::maxspeed() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.maxSpeed)
  return maxspeed_;
}
inline void CMPWlkgTm_flat::set_maxspeed(double value) {
  
  maxspeed_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.maxSpeed)
}

// optional double time = 13;
inline void CMPWlkgTm_flat::clear_time() {
  time_ = 0;
}
inline double CMPWlkgTm_flat::time() const {
  // @@protoc_insertion_point(field_get:noninteracting.CMPWlkgTm_flat.time)
  return time_;
}
inline void CMPWlkgTm_flat::set_time(double value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:noninteracting.CMPWlkgTm_flat.time)
}

// -------------------------------------------------------------------

// GetPos

// optional .noninteracting.PBMSPersonStage_Walking stage = 1;
inline bool GetPos::has_stage() const {
  return !_is_default_instance_ && stage_ != NULL;
}
inline void GetPos::clear_stage() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
}
inline const ::noninteracting::PBMSPersonStage_Walking& GetPos::stage() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetPos.stage)
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
inline ::noninteracting::PBMSPersonStage_Walking* GetPos::mutable_stage() {
  
  if (stage_ == NULL) {
    stage_ = new ::noninteracting::PBMSPersonStage_Walking;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetPos.stage)
  return stage_;
}
inline ::noninteracting::PBMSPersonStage_Walking* GetPos::release_stage() {
  
  ::noninteracting::PBMSPersonStage_Walking* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline void GetPos::set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetPos.stage)
}

// optional .noninteracting.PBSUMOTime sumoTime = 2;
inline bool GetPos::has_sumotime() const {
  return !_is_default_instance_ && sumotime_ != NULL;
}
inline void GetPos::clear_sumotime() {
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}
inline const ::noninteracting::PBSUMOTime& GetPos::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetPos.sumoTime)
  return sumotime_ != NULL ? *sumotime_ : *default_instance_->sumotime_;
}
inline ::noninteracting::PBSUMOTime* GetPos::mutable_sumotime() {
  
  if (sumotime_ == NULL) {
    sumotime_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetPos.sumoTime)
  return sumotime_;
}
inline ::noninteracting::PBSUMOTime* GetPos::release_sumotime() {
  
  ::noninteracting::PBSUMOTime* temp = sumotime_;
  sumotime_ = NULL;
  return temp;
}
inline void GetPos::set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime) {
  delete sumotime_;
  sumotime_ = sumotime;
  if (sumotime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetPos.sumoTime)
}

// -------------------------------------------------------------------

// GetAngle

// optional .noninteracting.PBMSPersonStage_Walking stage = 1;
inline bool GetAngle::has_stage() const {
  return !_is_default_instance_ && stage_ != NULL;
}
inline void GetAngle::clear_stage() {
  if (GetArenaNoVirtual() == NULL && stage_ != NULL) delete stage_;
  stage_ = NULL;
}
inline const ::noninteracting::PBMSPersonStage_Walking& GetAngle::stage() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetAngle.stage)
  return stage_ != NULL ? *stage_ : *default_instance_->stage_;
}
inline ::noninteracting::PBMSPersonStage_Walking* GetAngle::mutable_stage() {
  
  if (stage_ == NULL) {
    stage_ = new ::noninteracting::PBMSPersonStage_Walking;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetAngle.stage)
  return stage_;
}
inline ::noninteracting::PBMSPersonStage_Walking* GetAngle::release_stage() {
  
  ::noninteracting::PBMSPersonStage_Walking* temp = stage_;
  stage_ = NULL;
  return temp;
}
inline void GetAngle::set_allocated_stage(::noninteracting::PBMSPersonStage_Walking* stage) {
  delete stage_;
  stage_ = stage;
  if (stage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetAngle.stage)
}

// optional .noninteracting.PBSUMOTime sumoTime = 2;
inline bool GetAngle::has_sumotime() const {
  return !_is_default_instance_ && sumotime_ != NULL;
}
inline void GetAngle::clear_sumotime() {
  if (GetArenaNoVirtual() == NULL && sumotime_ != NULL) delete sumotime_;
  sumotime_ = NULL;
}
inline const ::noninteracting::PBSUMOTime& GetAngle::sumotime() const {
  // @@protoc_insertion_point(field_get:noninteracting.GetAngle.sumoTime)
  return sumotime_ != NULL ? *sumotime_ : *default_instance_->sumotime_;
}
inline ::noninteracting::PBSUMOTime* GetAngle::mutable_sumotime() {
  
  if (sumotime_ == NULL) {
    sumotime_ = new ::noninteracting::PBSUMOTime;
  }
  // @@protoc_insertion_point(field_mutable:noninteracting.GetAngle.sumoTime)
  return sumotime_;
}
inline ::noninteracting::PBSUMOTime* GetAngle::release_sumotime() {
  
  ::noninteracting::PBSUMOTime* temp = sumotime_;
  sumotime_ = NULL;
  return temp;
}
inline void GetAngle::set_allocated_sumotime(::noninteracting::PBSUMOTime* sumotime) {
  delete sumotime_;
  sumotime_ = sumotime;
  if (sumotime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:noninteracting.GetAngle.sumoTime)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace noninteracting

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_noninteracting_2eproto__INCLUDED
